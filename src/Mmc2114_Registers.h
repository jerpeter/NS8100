/*******************************************************************
 *
 *    DESCRIPTION: MMC2114 Internal register defines and masks
 *
 *    AUTHOR:      Joseph R. Getz
 *
 *    HISTORY:
 *                 1.0      First release
 *
 *******************************************************************/
#if 1
#ifndef _MMC2114_H
#define _MMC2114_H

#include "Common.h"

/***********************************************************************
 *
 * Macro for computing address of on-chip peripheral registers
 *
 ***********************************************************************/
#define MMC2114_addr(IMMP,OFFSET)   ((void*)&((uint8*)IMMP)[OFFSET])

/***********************************************************************
 *
 * Macros for accessing the on-chip I/O resources
 *
 ***********************************************************************/
#define MMC2114_iord(IMMP,OFFSET,SIZE)		\
    *(volatile uint ## SIZE *)(MMC2114_addr(IMMP,OFFSET))

#define MMC2114_iowr(IMMP,OFFSET,SIZE,DATA)  \
    *(volatile uint ## SIZE *)(MMC2114_addr(IMMP,OFFSET)) = (DATA)


/***********************************************************************
 *
 * Port Module, PORTS
 *
 ***********************************************************************/

/* Offsets of the registers from the start of module */
#define MMC2114_PORTS_OFFSET      (0x00000000)

#define MMC2114_PORTA_DATA		    (MMC2114_PORTS_OFFSET+0x0000)
#define MMC2114_PORTB_DATA		    (MMC2114_PORTS_OFFSET+0x0001)
#define MMC2114_PORTC_DATA		    (MMC2114_PORTS_OFFSET+0x0002)
#define MMC2114_PORTD_DATA		    (MMC2114_PORTS_OFFSET+0x0003)
#define MMC2114_PORTE_DATA		    (MMC2114_PORTS_OFFSET+0x0004)
#define MMC2114_PORTF_DATA		    (MMC2114_PORTS_OFFSET+0x0005)
#define MMC2114_PORTG_DATA		    (MMC2114_PORTS_OFFSET+0x0006)
#define MMC2114_PORTH_DATA		    (MMC2114_PORTS_OFFSET+0x0007)
#define MMC2114_PORTI_DATA		    (MMC2114_PORTS_OFFSET+0x0008)

#define MMC2114_PORTA_DIRECTION	    (MMC2114_PORTS_OFFSET+0x000C)
#define MMC2114_PORTB_DIRECTION	    (MMC2114_PORTS_OFFSET+0x000D)
#define MMC2114_PORTC_DIRECTION	    (MMC2114_PORTS_OFFSET+0x000E)
#define MMC2114_PORTD_DIRECTION	    (MMC2114_PORTS_OFFSET+0x000F)
#define MMC2114_PORTE_DIRECTION	    (MMC2114_PORTS_OFFSET+0x0010)
#define MMC2114_PORTF_DIRECTION	    (MMC2114_PORTS_OFFSET+0x0011)
#define MMC2114_PORTG_DIRECTION	    (MMC2114_PORTS_OFFSET+0x0012)
#define MMC2114_PORTH_DIRECTION	    (MMC2114_PORTS_OFFSET+0x0013)
#define MMC2114_PORTI_DIRECTION	    (MMC2114_PORTS_OFFSET+0x0014)

#define MMC2114_PORTA_SET	        (MMC2114_PORTS_OFFSET+0x0018)
#define MMC2114_PORTB_SET	        (MMC2114_PORTS_OFFSET+0x0019)
#define MMC2114_PORTC_SET	        (MMC2114_PORTS_OFFSET+0x001A)
#define MMC2114_PORTD_SET	        (MMC2114_PORTS_OFFSET+0x001B)
#define MMC2114_PORTE_SET	        (MMC2114_PORTS_OFFSET+0x001C)
#define MMC2114_PORTF_SET	        (MMC2114_PORTS_OFFSET+0x001D)
#define MMC2114_PORTG_SET	        (MMC2114_PORTS_OFFSET+0x001E)
#define MMC2114_PORTH_SET	        (MMC2114_PORTS_OFFSET+0x001F)
#define MMC2114_PORTI_SET	        (MMC2114_PORTS_OFFSET+0x0020)

#define MMC2114_PORTA_CLEAR	        (MMC2114_PORTS_OFFSET+0x0024)
#define MMC2114_PORTB_CLEAR	        (MMC2114_PORTS_OFFSET+0x0025)
#define MMC2114_PORTC_CLEAR	        (MMC2114_PORTS_OFFSET+0x0026)
#define MMC2114_PORTD_CLEAR	        (MMC2114_PORTS_OFFSET+0x0027)
#define MMC2114_PORTE_CLEAR	        (MMC2114_PORTS_OFFSET+0x0028)
#define MMC2114_PORTF_CLEAR	        (MMC2114_PORTS_OFFSET+0x0029)
#define MMC2114_PORTG_CLEAR	        (MMC2114_PORTS_OFFSET+0x002A)
#define MMC2114_PORTH_CLEAR	        (MMC2114_PORTS_OFFSET+0x002B)
#define MMC2114_PORTI_CLEAR	        (MMC2114_PORTS_OFFSET+0x002C)

#define MMC2114_PORTA_PAR	        (MMC2114_PORTS_OFFSET+0x0030)
#define MMC2114_PORTE_PAR	        (MMC2114_PORTS_OFFSET+0x0031)

/* Read access macros for general use */
#define MMC2114_RD_PORTS_PORTA_DATA(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTA_DATA,8)
#define MMC2114_RD_PORTS_PORTB_DATA(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTB_DATA,8)
#define MMC2114_RD_PORTS_PORTC_DATA(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTC_DATA,8)
#define MMC2114_RD_PORTS_PORTD_DATA(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTD_DATA,8)
#define MMC2114_RD_PORTS_PORTE_DATA(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTE_DATA,8)
#define MMC2114_RD_PORTS_PORTF_DATA(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTF_DATA,8)
#define MMC2114_RD_PORTS_PORTG_DATA(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTG_DATA,8)
#define MMC2114_RD_PORTS_PORTH_DATA(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTH_DATA,8)
#define MMC2114_RD_PORTS_PORTI_DATA(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTI_DATA,8)

#define MMC2114_RD_PORTS_PORTA_DIRECTION(IMMP)	MMC2114_iord(IMMP,MMC2114_PORTA_DIRECTION,8)
#define MMC2114_RD_PORTS_PORTB_DIRECTION(IMMP)	MMC2114_iord(IMMP,MMC2114_PORTB_DIRECTION,8)
#define MMC2114_RD_PORTS_PORTC_DIRECTION(IMMP)	MMC2114_iord(IMMP,MMC2114_PORTC_DIRECTION,8)
#define MMC2114_RD_PORTS_PORTD_DIRECTION(IMMP)	MMC2114_iord(IMMP,MMC2114_PORTD_DIRECTION,8)
#define MMC2114_RD_PORTS_PORTE_DIRECTION(IMMP)	MMC2114_iord(IMMP,MMC2114_PORTE_DIRECTION,8)
#define MMC2114_RD_PORTS_PORTF_DIRECTION(IMMP)	MMC2114_iord(IMMP,MMC2114_PORTF_DIRECTION,8)
#define MMC2114_RD_PORTS_PORTG_DIRECTION(IMMP)	MMC2114_iord(IMMP,MMC2114_PORTG_DIRECTION,8)
#define MMC2114_RD_PORTS_PORTH_DIRECTION(IMMP)	MMC2114_iord(IMMP,MMC2114_PORTH_DIRECTION,8)
#define MMC2114_RD_PORTS_PORTI_DIRECTION(IMMP)	MMC2114_iord(IMMP,MMC2114_PORTI_DIRECTION,8)

#define MMC2114_RD_PORTS_PORTA_SET(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTA_SET,8)
#define MMC2114_RD_PORTS_PORTB_SET(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTB_SET,8)
#define MMC2114_RD_PORTS_PORTC_SET(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTC_SET,8)
#define MMC2114_RD_PORTS_PORTD_SET(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTD_SET,8)
#define MMC2114_RD_PORTS_PORTE_SET(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTE_SET,8)
#define MMC2114_RD_PORTS_PORTF_SET(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTF_SET,8)
#define MMC2114_RD_PORTS_PORTG_SET(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTG_SET,8)
#define MMC2114_RD_PORTS_PORTH_SET(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTH_SET,8)
#define MMC2114_RD_PORTS_PORTI_SET(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTI_SET,8)

#define MMC2114_RD_PORTS_PORTA_CLEAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTA_CLEAR,8)
#define MMC2114_RD_PORTS_PORTB_CLEAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTB_CLEAR,8)
#define MMC2114_RD_PORTS_PORTC_CLEAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTC_CLEAR,8)
#define MMC2114_RD_PORTS_PORTD_CLEAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTD_CLEAR,8)
#define MMC2114_RD_PORTS_PORTE_CLEAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTE_CLEAR,8)
#define MMC2114_RD_PORTS_PORTF_CLEAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTF_CLEAR,8)
#define MMC2114_RD_PORTS_PORTG_CLEAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTG_CLEAR,8)
#define MMC2114_RD_PORTS_PORTH_CLEAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTH_CLEAR,8)
#define MMC2114_RD_PORTS_PORTI_CLEAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTI_CLEAR,8)

#define MMC2114_RD_PORTS_PORTA_PAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTA_PAR,8)
#define MMC2114_RD_PORTS_PORTE_PAR(IMMP)	    MMC2114_iord(IMMP,MMC2114_PORTE_PAR,8)

/* Write access macros for general use */
#define MMC2114_WR_PORTS_PORTA_DATA(IMMP,DATA) 	    MMC2114_iowr(IMMP,MMC2114_PORTA_DATA,8,DATA)
#define MMC2114_WR_PORTS_PORTB_DATA(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTB_DATA,8,DATA)
#define MMC2114_WR_PORTS_PORTC_DATA(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTC_DATA,8,DATA)
#define MMC2114_WR_PORTS_PORTD_DATA(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTD_DATA,8,DATA)
#define MMC2114_WR_PORTS_PORTE_DATA(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTE_DATA,8,DATA)
#define MMC2114_WR_PORTS_PORTF_DATA(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTF_DATA,8,DATA)
#define MMC2114_WR_PORTS_PORTG_DATA(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTG_DATA,8,DATA)
#define MMC2114_WR_PORTS_PORTH_DATA(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTH_DATA,8,DATA)
#define MMC2114_WR_PORTS_PORTI_DATA(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTI_DATA,8,DATA)

#define MMC2114_WR_PORTS_PORTA_DIRECTION(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_PORTA_DIRECTION,8,DATA)
#define MMC2114_WR_PORTS_PORTB_DIRECTION(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_PORTB_DIRECTION,8,DATA)
#define MMC2114_WR_PORTS_PORTC_DIRECTION(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_PORTC_DIRECTION,8,DATA)
#define MMC2114_WR_PORTS_PORTD_DIRECTION(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_PORTD_DIRECTION,8,DATA)
#define MMC2114_WR_PORTS_PORTE_DIRECTION(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_PORTE_DIRECTION,8,DATA)
#define MMC2114_WR_PORTS_PORTF_DIRECTION(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_PORTF_DIRECTION,8,DATA)
#define MMC2114_WR_PORTS_PORTG_DIRECTION(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_PORTG_DIRECTION,8,DATA)
#define MMC2114_WR_PORTS_PORTH_DIRECTION(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_PORTH_DIRECTION,8,DATA)
#define MMC2114_WR_PORTS_PORTI_DIRECTION(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_PORTI_DIRECTION,8,DATA)

#define MMC2114_WR_PORTS_PORTA_SET(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTA_SET,8,DATA)
#define MMC2114_WR_PORTS_PORTB_SET(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTB_SET,8,DATA)
#define MMC2114_WR_PORTS_PORTC_SET(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTC_SET,8,DATA)
#define MMC2114_WR_PORTS_PORTD_SET(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTD_SET,8,DATA)
#define MMC2114_WR_PORTS_PORTE_SET(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTE_SET,8,DATA)
#define MMC2114_WR_PORTS_PORTF_SET(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTF_SET,8,DATA)
#define MMC2114_WR_PORTS_PORTG_SET(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTG_SET,8,DATA)
#define MMC2114_WR_PORTS_PORTH_SET(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTH_SET,8,DATA)
#define MMC2114_WR_PORTS_PORTI_SET(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTI_SET,8,DATA)

#define MMC2114_WR_PORTS_PORTA_CLEAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTA_CLEAR,8,DATA)
#define MMC2114_WR_PORTS_PORTB_CLEAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTB_CLEAR,8,DATA)
#define MMC2114_WR_PORTS_PORTC_CLEAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTC_CLEAR,8,DATA)
#define MMC2114_WR_PORTS_PORTD_CLEAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTD_CLEAR,8,DATA)
#define MMC2114_WR_PORTS_PORTE_CLEAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTE_CLEAR,8,DATA)
#define MMC2114_WR_PORTS_PORTF_CLEAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTF_CLEAR,8,DATA)
#define MMC2114_WR_PORTS_PORTG_CLEAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTG_CLEAR,8,DATA)
#define MMC2114_WR_PORTS_PORTH_CLEAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTH_CLEAR,8,DATA)
#define MMC2114_WR_PORTS_PORTI_CLEAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTI_CLEAR,8,DATA)

#define MMC2114_WR_PORTS_PORTA_PAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTA_PAR,8,DATA)
#define MMC2114_WR_PORTS_PORTE_PAR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_PORTE_PAR,8,DATA)

#define MMC2114_PORTS_BIT(a)        ((0x01)<<(a))

/* Read/Write access structure */
typedef volatile struct
{
    uint8	PORTA_DATA;
    uint8	PORTB_DATA;
    uint8	PORTC_DATA;
    uint8	PORTD_DATA;
    uint8	PORTE_DATA;
    uint8	PORTF_DATA;
    uint8	PORTG_DATA;
    uint8	PORTH_DATA;
    uint8	PORTI_DATA;
    uint8	Reserved1[0x0003];
    uint8	PORTA_DIRECTION;
    uint8	PORTB_DIRECTION;
    uint8	PORTC_DIRECTION;
    uint8	PORTD_DIRECTION;
    uint8	PORTE_DIRECTION;
    uint8	PORTF_DIRECTION;
    uint8	PORTG_DIRECTION;
    uint8	PORTH_DIRECTION;
    uint8	PORTI_DIRECTION;
    uint8	Reserved2[0x0003];
    uint8	PORTA_SET;
    uint8	PORTB_SET;
    uint8	PORTC_SET;
    uint8	PORTD_SET;
    uint8	PORTE_SET;
    uint8	PORTF_SET;
    uint8	PORTG_SET;
    uint8	PORTH_SET;
    uint8	PORTI_SET;
    uint8	Reserved3[0x0003];
    uint8	PORTA_CLEAR;
    uint8	PORTB_CLEAR;
    uint8	PORTC_CLEAR;
    uint8	PORTD_CLEAR;
    uint8	PORTE_CLEAR;
    uint8	PORTF_CLEAR;
    uint8	PORTG_CLEAR;
    uint8	PORTH_CLEAR;
    uint8	PORTI_CLEAR;
    uint8	Reserved4[0x0003];
    uint8	PORTA_PAR;
    uint8	PORTE_PAR;
} MMC2114_PORTS;


/***********************************************************************
 *
 * Chip Configuration Module, CCM
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_CCM_OFFSET          (0x00010000)

/* Register offsets */
#define MMC2114_CCM_CCR		        (MMC2114_CCM_OFFSET+0x0000)
#define MMC2114_CCM_RCON	        (MMC2114_CCM_OFFSET+0x0004)
#define MMC2114_CCM_CIR		        (MMC2114_CCM_OFFSET+0x0006)
#define MMC2114_CCM_CTR		        (MMC2114_CCM_OFFSET+0x0008)

/* Read access macros for general use */
#define MMC2114_RD_CCM_CCR(IMMP)	 MMC2114_iord(IMMP,MMC2114_CCM_CCR,16)
#define MMC2114_RD_CCM_RCON(IMMP)	 MMC2114_iord(IMMP,MMC2114_CCM_RCON,16)
#define MMC2114_RD_CCM_CIR(IMMP)	 MMC2114_iord(IMMP,MMC2114_CCM_CIR,16)
#define MMC2114_RD_CCM_CTR(IMMP)	 MMC2114_iord(IMMP,MMC2114_CCM_CTR,16)

/* Write access macros for general use */
#define MMC2114_WR_CCM_CCR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CCM_CCR,16,DATA)
#define MMC2114_WR_CCM_RCON(IMMP,DATA)   MMC2114_iowr(IMMP,MMC2114_CCM_RCON,16,DATA)
#define MMC2114_WR_CCM_CIR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CCM_CIR,16,DATA)
#define MMC2114_WR_CCM_CTR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CCM_CTR,16,DATA)

/* Bit field defines */
#define MMC2114_CCM_CCR_LOAD			(0x8000)
#define MMC2114_CCM_CCR_SHEN			(0x2000)
#define MMC2114_CCM_CCR_EMINT			(0x1000)
#define MMC2114_CCM_CCR_SZEN			(0x0040)
#define MMC2114_CCM_CCR_PSTEN			(0x0020)
#define MMC2114_CCM_CCR_SHINT			(0x0010)
#define MMC2114_CCM_CCR_BME             (0x0008)
#define MMC2114_CCM_CCR_BMD	            (0x0004)
#define MMC2114_CCM_CCR_BMT(a)			((a)&0x03)

#define MMC2114_CCM_RCON_RPLLSEL		(0x0080)
#define MMC2114_CCM_RCON_RPLLREF		(0x0040)
#define MMC2114_CCM_RCON_RLOAD          (0x0020)
#define MMC2114_CCM_RCON_BOOTPS         (0x0008)
#define MMC2114_CCM_RCON_BOOTSEL        (0x0004)
#define MMC2114_CCM_RCON_MODE           (0x0001)

#define MMC2114_CCM_CIR_PIN(a)			(((a)&0x0FF)<< 8)
#define MMC2114_CCM_CIR_PRN(a)			((a)&0x0FF)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_CCM_OFFSET];
    uint16	CCR;
    uint8	Reserved1[0x0002];
    uint16	RCON;
    uint16	CIR;
    uint16	CTR;
} MMC2114_CCM;

/***********************************************************************
 *
 * Chip-Select Module, CS
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_CS_OFFSET           (0x00020000)

/* Register offsets */
#define MMC2114_CS_CSCR0		    (MMC2114_CS_OFFSET+0x0000)
#define MMC2114_CS_CSCR1		    (MMC2114_CS_OFFSET+0x0002)
#define MMC2114_CS_CSCR2		    (MMC2114_CS_OFFSET+0x0004)
#define MMC2114_CS_CSCR3		    (MMC2114_CS_OFFSET+0x0006)

/* Read access macros for general use */
#define MMC2114_RD_CS_CSCR0(IMMP)	 MMC2114_iord(IMMP,MMC2114_CS_CSCR0,16)
#define MMC2114_RD_CS_CSCR1(IMMP)	 MMC2114_iord(IMMP,MMC2114_CS_CSCR1,16)
#define MMC2114_RD_CS_CSCR2(IMMP)	 MMC2114_iord(IMMP,MMC2114_CS_CSCR2,16)
#define MMC2114_RD_CS_CSCR3(IMMP)	 MMC2114_iord(IMMP,MMC2114_CS_CSCR3,16)

/* Write access macros for general use */
#define MMC2114_WR_CS_CSCR0(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CS_CSCR0,16,DATA)
#define MMC2114_WR_CS_CSCR1(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CS_CSCR1,16,DATA)
#define MMC2114_WR_CS_CSCR2(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CS_CSCR2,16,DATA)
#define MMC2114_WR_CS_CSCR3(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CS_CSCR3,16,DATA)

/* Bit field defines */
#define MMC2114_CS_CSCR_SO          (0x8000)
#define MMC2114_CS_CSCR_RO          (0x4000)
#define MMC2114_CS_CSCR_PS          (0x2000)
#define MMC2114_CS_CSCR_WWS         (0x1000)
#define MMC2114_CS_CSCR_WE          (0x0800)
#define MMC2114_CS_CSCR_WS(a)		(((a)&0x07)<<8)
#define MMC2114_CS_CSCR_TAEN        (0x0002)
#define MMC2114_CS_CSCR_CSEN        (0x0001)

#define MMC2114_CS_CSCR_SUPERVISOR       (0x8000)
#define MMC2114_CS_CSCR_SUPERVISOR_USER  (0x0000)
#define MMC2114_CS_CSCR_READ             (0x4000)
#define MMC2114_CS_CSCR_READ_WRITE       (0x0000)
#define MMC2114_CS_CSCR_PS32             (0x2000)
#define MMC2114_CS_CSCR_PS16             (0x0000)
#define MMC2114_CS_CSCR_WRITE_WS1        (0x1000)
#define MMC2114_CS_CSCR_WRITE_WS0        (0x0000)
#define MMC2114_CS_CSCR_EB_WRITE         (0x0800)
#define MMC2114_CS_CSCR_EB_BYTE          (0x0000)
#define MMC2114_CS_CSCR_TA_INTERNAL      (0x0002)
#define MMC2114_CS_CSCR_TA_EXTERNAL      (0x0000)
#define MMC2114_CS_CSCR_CS_ENABLED       (0x0001)
#define MMC2114_CS_CSCR_CS_DISABLED      (0x0000)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_CS_OFFSET];
    uint16	CSCR0;
    uint16	CSCR1;
    uint16	CSCR2;
    uint16	CSCR3;
} MMC2114_CS;


/***********************************************************************
 *
 * Clock Module, CLOCK
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_CLOCK_OFFSET        (0x00030000)

/* Register offsets */
#define MMC2114_CLOCK_SYNCR		    (MMC2114_CLOCK_OFFSET+0x0000)
#define MMC2114_CLOCK_SYNSR		    (MMC2114_CLOCK_OFFSET+0x0002)
#define MMC2114_CLOCK_SYNTR		    (MMC2114_CLOCK_OFFSET+0x0003)
#define MMC2114_CLOCK_SYNTR2	    (MMC2114_CLOCK_OFFSET+0x0004)

/* Read access macros for general use */
#define MMC2114_RD_CLOCK_SYNCR(IMMP)	  MMC2114_iord(IMMP,MMC2114_CLOCK_SYNCR,16)
#define MMC2114_RD_CLOCK_SYNSR(IMMP)	  MMC2114_iord(IMMP,MMC2114_CLOCK_SYNSR,8)
#define MMC2114_RD_CLOCK_SYNTR(IMMP)	  MMC2114_iord(IMMP,MMC2114_CLOCK_SYNTR,8)
#define MMC2114_RD_CLOCK_SYNTR2(IMMP)	  MMC2114_iord(IMMP,MMC2114_CLOCK_SYNTR2,32)

/* Write access macros for general use */
#define MMC2114_WR_CLOCK_SYNCR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CLOCK_SYNCR,16,DATA)
#define MMC2114_WR_CLOCK_SYNSR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CLOCK_SYNSR,8,DATA)
#define MMC2114_WR_CLOCK_SYNTR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_CLOCK_SYNTR,8,DATA)
#define MMC2114_WR_CLOCK_SYNTR2(IMMP,DATA)   MMC2114_iowr(IMMP,MMC2114_CLOCK_SYNTR2,32,DATA)

/* Bit field defines */
#define MMC2114_CLOCK_SYNCR_LOLRE     (0x8000)
#define MMC2114_CLOCK_SYNCR_MFD(a)	  (((a)&0x07)<<12)
#define MMC2114_CLOCK_SYNCR_LOCRE     (0x0800)
#define MMC2114_CLOCK_SYNCR_RFD(a)	  (((a)&0x07)<<8)
#define MMC2114_CLOCK_SYNCR_LOCEN     (0x0080)
#define MMC2114_CLOCK_SYNCR_DISCLK    (0x0040)
#define MMC2114_CLOCK_SYNCR_FWKUP     (0x0020)
#define MMC2114_CLOCK_SYNCR_STMPD(a)  (((a)&0x03)<<2)

#define MMC2114_CLOCK_SYNSR_PLLMODE	  (0x80)
#define MMC2114_CLOCK_SYNSR_PLLSEL	  (0x40)
#define MMC2114_CLOCK_SYNSR_PLLREF	  (0x20)
#define MMC2114_CLOCK_SYNSR_LOCKS     (0x10)
#define MMC2114_CLOCK_SYNSR_LOCK	  (0x08)
#define MMC2114_CLOCK_SYNSR_LOCS	  (0x04)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_CLOCK_OFFSET];
    uint16	SYNCR;
    uint8	SYNSR;
    uint8	SYNTR;
    uint32	SYNTR2;
} MMC2114_CLOCK;


/***********************************************************************
 *
 * RESET Module, RESET
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_RESET_OFFSET        (0x00040000)

/* Register offsets */
#define MMC2114_RESET_RCR		    (MMC2114_RESET_OFFSET+0x0000)
#define MMC2114_RESET_RSR		    (MMC2114_RESET_OFFSET+0x0001)

/* Read access macros for general use */
#define MMC2114_RD_RESET_RCR(IMMP)	  MMC2114_iord(IMMP,MMC2114_RESET_RCR,8)
#define MMC2114_RD_RESET_RSR(IMMP)	  MMC2114_iord(IMMP,MMC2114_RESET_RSR,8)

/* Write access macros for general use */
#define MMC2114_WR_RESET_RCR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_RESET_RCR,8,DATA)
#define MMC2114_WR_RESET_RSR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_RESET_RSR,8,DATA)

/* Bit field defines */
#define MMC2114_RESET_RCR_SOFTRST         (0x80)
#define MMC2114_RESET_RCR_FRCRSTOUT       (0x40)
#define MMC2114_RESET_RCR_LVDF            (0x10)
#define MMC2114_RESET_RCR_LVDIE           (0x08)
#define MMC2114_RESET_RCR_LVDRE           (0x04)
#define MMC2114_RESET_RCR_LVDSE           (0x02)
#define MMC2114_RESET_RCR_LVDE            (0x01)

#define MMC2114_RESET_RSR_LVD             (0x40)
#define MMC2114_RESET_RSR_SOFT            (0x20)
#define MMC2114_RESET_RSR_WDR             (0x10)
#define MMC2114_RESET_RSR_POR             (0x08)
#define MMC2114_RESET_RSR_EXT             (0x04)
#define MMC2114_RESET_RSR_LOC             (0x02)
#define MMC2114_RESET_RSR_LOL             (0x01)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_RESET_OFFSET];
    uint8	RCR;
    uint8	RSR;
} MMC2114_RESET;


/***********************************************************************
 *
 * Interrupt Module, INTC
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_INTC_OFFSET         (0x00050000)

/* Register offsets */
#define MMC2114_INTC_ICR		    (MMC2114_INTC_OFFSET+0x0000)
#define MMC2114_INTC_ISR		    (MMC2114_INTC_OFFSET+0x0002)
#define MMC2114_INTC_IFRH		    (MMC2114_INTC_OFFSET+0x0004)
#define MMC2114_INTC_IFRL		    (MMC2114_INTC_OFFSET+0x0008)
#define MMC2114_INTC_IPR		    (MMC2114_INTC_OFFSET+0x000C)
#define MMC2114_INTC_NIER		    (MMC2114_INTC_OFFSET+0x0010)
#define MMC2114_INTC_NIPR		    (MMC2114_INTC_OFFSET+0x0014)
#define MMC2114_INTC_FIER		    (MMC2114_INTC_OFFSET+0x0018)
#define MMC2114_INTC_FIPR		    (MMC2114_INTC_OFFSET+0x001C)
#define MMC2114_INTC_PLSR0		    (MMC2114_INTC_OFFSET+0x0040)
#define MMC2114_INTC_PLSR1		    (MMC2114_INTC_OFFSET+0x0041)
#define MMC2114_INTC_PLSR2		    (MMC2114_INTC_OFFSET+0x0042)
#define MMC2114_INTC_PLSR3		    (MMC2114_INTC_OFFSET+0x0043)
#define MMC2114_INTC_PLSR4		    (MMC2114_INTC_OFFSET+0x0044)
#define MMC2114_INTC_PLSR5		    (MMC2114_INTC_OFFSET+0x0045)
#define MMC2114_INTC_PLSR6		    (MMC2114_INTC_OFFSET+0x0046)
#define MMC2114_INTC_PLSR7		    (MMC2114_INTC_OFFSET+0x0047)
#define MMC2114_INTC_PLSR8		    (MMC2114_INTC_OFFSET+0x0048)
#define MMC2114_INTC_PLSR9		    (MMC2114_INTC_OFFSET+0x0049)
#define MMC2114_INTC_PLSR10		    (MMC2114_INTC_OFFSET+0x004A)
#define MMC2114_INTC_PLSR11		    (MMC2114_INTC_OFFSET+0x004B)
#define MMC2114_INTC_PLSR12		    (MMC2114_INTC_OFFSET+0x004C)
#define MMC2114_INTC_PLSR13		    (MMC2114_INTC_OFFSET+0x004D)
#define MMC2114_INTC_PLSR14		    (MMC2114_INTC_OFFSET+0x004E)
#define MMC2114_INTC_PLSR15		    (MMC2114_INTC_OFFSET+0x004F)
#define MMC2114_INTC_PLSR16		    (MMC2114_INTC_OFFSET+0x0050)
#define MMC2114_INTC_PLSR17		    (MMC2114_INTC_OFFSET+0x0051)
#define MMC2114_INTC_PLSR18		    (MMC2114_INTC_OFFSET+0x0052)
#define MMC2114_INTC_PLSR19		    (MMC2114_INTC_OFFSET+0x0053)
#define MMC2114_INTC_PLSR20		    (MMC2114_INTC_OFFSET+0x0054)
#define MMC2114_INTC_PLSR21		    (MMC2114_INTC_OFFSET+0x0055)
#define MMC2114_INTC_PLSR22		    (MMC2114_INTC_OFFSET+0x0056)
#define MMC2114_INTC_PLSR23		    (MMC2114_INTC_OFFSET+0x0057)
#define MMC2114_INTC_PLSR24		    (MMC2114_INTC_OFFSET+0x0058)
#define MMC2114_INTC_PLSR25		    (MMC2114_INTC_OFFSET+0x0059)
#define MMC2114_INTC_PLSR26		    (MMC2114_INTC_OFFSET+0x005A)
#define MMC2114_INTC_PLSR27		    (MMC2114_INTC_OFFSET+0x005B)
#define MMC2114_INTC_PLSR28		    (MMC2114_INTC_OFFSET+0x005C)
#define MMC2114_INTC_PLSR29		    (MMC2114_INTC_OFFSET+0x005D)
#define MMC2114_INTC_PLSR30		    (MMC2114_INTC_OFFSET+0x005E)
#define MMC2114_INTC_PLSR31		    (MMC2114_INTC_OFFSET+0x005F)
#define MMC2114_INTC_PLSR32		    (MMC2114_INTC_OFFSET+0x0060)
#define MMC2114_INTC_PLSR33		    (MMC2114_INTC_OFFSET+0x0061)
#define MMC2114_INTC_PLSR34		    (MMC2114_INTC_OFFSET+0x0062)
#define MMC2114_INTC_PLSR35		    (MMC2114_INTC_OFFSET+0x0063)
#define MMC2114_INTC_PLSR36		    (MMC2114_INTC_OFFSET+0x0064)
#define MMC2114_INTC_PLSR37		    (MMC2114_INTC_OFFSET+0x0065)
#define MMC2114_INTC_PLSR38		    (MMC2114_INTC_OFFSET+0x0066)
#define MMC2114_INTC_PLSR39		    (MMC2114_INTC_OFFSET+0x0067)

/* Read access macros for general use */
#define MMC2114_RD_INTC_ICR(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_ICR,16)
#define MMC2114_RD_INTC_ISR(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_ISR,16)
#define MMC2114_RD_INTC_IFRH(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_IFRH,32)
#define MMC2114_RD_INTC_IFRL(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_IFRL,32)
#define MMC2114_RD_INTC_IPR(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_IPR,32)
#define MMC2114_RD_INTC_NIER(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_NIER,32)
#define MMC2114_RD_INTC_NIPR(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_NIPR,32)
#define MMC2114_RD_INTC_FIER(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_FIER,32)
#define MMC2114_RD_INTC_FIPR(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_FIPR,32)
#define MMC2114_RD_INTC_PLSR0(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR0,8)
#define MMC2114_RD_INTC_PLSR1(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR1,8)
#define MMC2114_RD_INTC_PLSR2(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR2,8)
#define MMC2114_RD_INTC_PLSR3(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR3,8)
#define MMC2114_RD_INTC_PLSR4(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR4,8)
#define MMC2114_RD_INTC_PLSR5(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR5,8)
#define MMC2114_RD_INTC_PLSR6(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR6,8)
#define MMC2114_RD_INTC_PLSR7(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR7,8)
#define MMC2114_RD_INTC_PLSR8(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR8,8)
#define MMC2114_RD_INTC_PLSR9(IMMP)	      MMC2114_iord(IMMP,MMC2114_INTC_PLSR9,8)
#define MMC2114_RD_INTC_PLSR10(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR10,8)
#define MMC2114_RD_INTC_PLSR11(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR11,8)
#define MMC2114_RD_INTC_PLSR12(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR12,8)
#define MMC2114_RD_INTC_PLSR13(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR13,8)
#define MMC2114_RD_INTC_PLSR14(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR14,8)
#define MMC2114_RD_INTC_PLSR15(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR15,8)
#define MMC2114_RD_INTC_PLSR16(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR16,8)
#define MMC2114_RD_INTC_PLSR17(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR17,8)
#define MMC2114_RD_INTC_PLSR18(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR18,8)
#define MMC2114_RD_INTC_PLSR19(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR19,8)
#define MMC2114_RD_INTC_PLSR20(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR20,8)
#define MMC2114_RD_INTC_PLSR21(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR21,8)
#define MMC2114_RD_INTC_PLSR22(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR22,8)
#define MMC2114_RD_INTC_PLSR23(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR23,8)
#define MMC2114_RD_INTC_PLSR24(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR24,8)
#define MMC2114_RD_INTC_PLSR25(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR25,8)
#define MMC2114_RD_INTC_PLSR26(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR26,8)
#define MMC2114_RD_INTC_PLSR27(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR27,8)
#define MMC2114_RD_INTC_PLSR28(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR28,8)
#define MMC2114_RD_INTC_PLSR29(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR29,8)
#define MMC2114_RD_INTC_PLSR30(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR30,8)
#define MMC2114_RD_INTC_PLSR31(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR31,8)
#define MMC2114_RD_INTC_PLSR32(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR32,8)
#define MMC2114_RD_INTC_PLSR33(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR33,8)
#define MMC2114_RD_INTC_PLSR34(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR34,8)
#define MMC2114_RD_INTC_PLSR35(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR35,8)
#define MMC2114_RD_INTC_PLSR36(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR36,8)
#define MMC2114_RD_INTC_PLSR37(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR37,8)
#define MMC2114_RD_INTC_PLSR38(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR38,8)
#define MMC2114_RD_INTC_PLSR39(IMMP)	  MMC2114_iord(IMMP,MMC2114_INTC_PLSR39,8)

/* Write access macros for general use */
#define MMC2114_WR_INTC_ICR(IMMP,DATA)         MMC2114_iowr(IMMP,MMC2114_INTC_ICR,16,DATA)
#define MMC2114_WR_INTC_ISR(IMMP,DATA)         MMC2114_iowr(IMMP,MMC2114_INTC_ISR,16,DATA)
#define MMC2114_WR_INTC_IFRH(IMMP,DATA)	       MMC2114_iowr(IMMP,MMC2114_INTC_IFRH,32,DATA)
#define MMC2114_WR_INTC_IFRL(IMMP,DATA)	       MMC2114_iowr(IMMP,MMC2114_INTC_IFRL,32,DATA)
#define MMC2114_WR_INTC_IPR(IMMP,DATA)	       MMC2114_iowr(IMMP,MMC2114_INTC_IPR,32,DATA)
#define MMC2114_WR_INTC_NIER(IMMP,DATA)	       MMC2114_iowr(IMMP,MMC2114_INTC_NIER,32,DATA)
#define MMC2114_WR_INTC_NIPR(IMMP,DATA)	       MMC2114_iowr(IMMP,MMC2114_INTC_NIPR,32,DATA)
#define MMC2114_WR_INTC_FIER(IMMP,DATA)	       MMC2114_iowr(IMMP,MMC2114_INTC_FIER,32,DATA)
#define MMC2114_WR_INTC_FIPR(IMMP,DATA)	       MMC2114_iowr(IMMP,MMC2114_INTC_FIPR,32,DATA)
#define MMC2114_WR_INTC_PLSR0(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR0,8,DATA)
#define MMC2114_WR_INTC_PLSR1(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR1,8,DATA)
#define MMC2114_WR_INTC_PLSR2(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR2,8,DATA)
#define MMC2114_WR_INTC_PLSR3(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR3,8,DATA)
#define MMC2114_WR_INTC_PLSR4(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR4,8,DATA)
#define MMC2114_WR_INTC_PLSR5(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR5,8,DATA)
#define MMC2114_WR_INTC_PLSR6(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR6,8,DATA)
#define MMC2114_WR_INTC_PLSR7(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR7,8,DATA)
#define MMC2114_WR_INTC_PLSR8(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR8,8,DATA)
#define MMC2114_WR_INTC_PLSR9(IMMP,DATA)       MMC2114_iowr(IMMP,MMC2114_INTC_PLSR9,8,DATA)
#define MMC2114_WR_INTC_PLSR10(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR10,8,DATA)
#define MMC2114_WR_INTC_PLSR11(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR11,8,DATA)
#define MMC2114_WR_INTC_PLSR12(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR12,8,DATA)
#define MMC2114_WR_INTC_PLSR13(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR13,8,DATA)
#define MMC2114_WR_INTC_PLSR14(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR14,8,DATA)
#define MMC2114_WR_INTC_PLSR15(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR15,8,DATA)
#define MMC2114_WR_INTC_PLSR16(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR16,8,DATA)
#define MMC2114_WR_INTC_PLSR17(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR17,8,DATA)
#define MMC2114_WR_INTC_PLSR18(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR18,8,DATA)
#define MMC2114_WR_INTC_PLSR19(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR19,8,DATA)
#define MMC2114_WR_INTC_PLSR20(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR20,8,DATA)
#define MMC2114_WR_INTC_PLSR21(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR21,8,DATA)
#define MMC2114_WR_INTC_PLSR22(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR22,8,DATA)
#define MMC2114_WR_INTC_PLSR23(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR23,8,DATA)
#define MMC2114_WR_INTC_PLSR24(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR24,8,DATA)
#define MMC2114_WR_INTC_PLSR25(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR25,8,DATA)
#define MMC2114_WR_INTC_PLSR26(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR26,8,DATA)
#define MMC2114_WR_INTC_PLSR27(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR27,8,DATA)
#define MMC2114_WR_INTC_PLSR28(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR28,8,DATA)
#define MMC2114_WR_INTC_PLSR29(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR29,8,DATA)
#define MMC2114_WR_INTC_PLSR30(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR30,8,DATA)
#define MMC2114_WR_INTC_PLSR31(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR31,8,DATA)
#define MMC2114_WR_INTC_PLSR32(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR32,8,DATA)
#define MMC2114_WR_INTC_PLSR33(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR33,8,DATA)
#define MMC2114_WR_INTC_PLSR34(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR34,8,DATA)
#define MMC2114_WR_INTC_PLSR35(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR35,8,DATA)
#define MMC2114_WR_INTC_PLSR36(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR36,8,DATA)
#define MMC2114_WR_INTC_PLSR37(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR37,8,DATA)
#define MMC2114_WR_INTC_PLSR38(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR38,8,DATA)
#define MMC2114_WR_INTC_PLSR39(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_INTC_PLSR39,8,DATA)

/* Bit field defines */
#define MMC2114_INTC_ICR_AE         (0x8000)
#define MMC2114_INTC_ICR_FVE        (0x4000)
#define MMC2114_INTC_ICR_ME         (0x2000)
#define MMC2114_INTC_ICR_MFI        (0x1000)
#define MMC2114_INTC_ICR_MASK(a)    ((a)&0x1F))

#define MMC2114_INTC_ISR_INT        (0x0200)
#define MMC2114_INTC_ISR_FINT       (0x0100)
#define MMC2114_INTC_ISR_VEC(a)     ((a)&0x7F))

#define MMC2114_INTC_IFRH_IF(a)     ((0x01)<<(a - 32))

#define MMC2114_INTC_IFRL_IF(a)     ((0x01)<<(a))

#define MMC2114_INTC_IPR_IP(a)      ((0x01)<<(a))

#define MMC2114_INTC_NIER_NIE(a)    ((0x01)<<(a))

#define MMC2114_INTC_NIPR_NIP(a)    ((0x01)<<(a))

#define MMC2114_INTC_FIER_FIE(a)    ((0x01)<<(a))

#define MMC2114_INTC_FIPR_FIP(a)    ((0x01)<<(a))

#define MMC2114_INTC_PLSR_PLS(a)    ((a)&0x1F))

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_INTC_OFFSET];
    uint16	ICR;
    uint16	ISR;
    uint32	IFRH;
    uint32	IFRL;
    uint32	IPR;
    uint32	NIER;
    uint32	NIPR;
    uint32	FIER;
    uint32	FIPR;
    uint8	Reserved1[0x0020];
    uint8	PLSR0;
    uint8	PLSR1;
    uint8	PLSR2;
    uint8	PLSR3;
    uint8	PLSR4;
    uint8	PLSR5;
    uint8	PLSR6;
    uint8	PLSR7;
    uint8	PLSR8;
    uint8	PLSR9;
    uint8	PLSR10;
    uint8	PLSR11;
    uint8	PLSR12;
    uint8	PLSR13;
    uint8	PLSR14;
    uint8	PLSR15;
    uint8	PLSR16;
    uint8	PLSR17;
    uint8	PLSR18;
    uint8	PLSR19;
    uint8	PLSR20;
    uint8	PLSR21;
    uint8	PLSR22;
    uint8	PLSR23;
    uint8	PLSR24;
    uint8	PLSR25;
    uint8	PLSR26;
    uint8	PLSR27;
    uint8	PLSR28;
    uint8	PLSR29;
    uint8	PLSR30;
    uint8	PLSR31;
    uint8	PLSR32;
    uint8	PLSR33;
    uint8	PLSR34;
    uint8	PLSR35;
    uint8	PLSR36;
    uint8	PLSR37;
    uint8	PLSR38;
    uint8	PLSR39;
} MMC2114_INTC;

/***********************************************************************
 *
 * Edge Port Module, EPORT
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_EPORT_OFFSET        (0x00060000)

/* Register offsets */
#define MMC2114_EPORT_EPPAR		    (MMC2114_EPORT_OFFSET+0x0000)
#define MMC2114_EPORT_EPDDR		    (MMC2114_EPORT_OFFSET+0x0002)
#define MMC2114_EPORT_EPIER		    (MMC2114_EPORT_OFFSET+0x0003)
#define MMC2114_EPORT_EPDR		    (MMC2114_EPORT_OFFSET+0x0004)
#define MMC2114_EPORT_EPPDR		    (MMC2114_EPORT_OFFSET+0x0005)
#define MMC2114_EPORT_EPFR		    (MMC2114_EPORT_OFFSET+0x0006)

/* Read access macros for general use */
#define MMC2114_RD_EPORT_EPPAR(IMMP)	  MMC2114_iord(IMMP,MMC2114_EPORT_EPPAR,16)
#define MMC2114_RD_EPORT_EPDDR(IMMP)	  MMC2114_iord(IMMP,MMC2114_EPORT_EPDDR,8)
#define MMC2114_RD_EPORT_EPIER(IMMP)	  MMC2114_iord(IMMP,MMC2114_EPORT_EPIER,8)
#define MMC2114_RD_EPORT_EPDR(IMMP)	      MMC2114_iord(IMMP,MMC2114_EPORT_EPDR,8)
#define MMC2114_RD_EPORT_EPPDR(IMMP)	  MMC2114_iord(IMMP,MMC2114_EPORT_EPPDR,8)
#define MMC2114_RD_EPORT_EPFR(IMMP)	      MMC2114_iord(IMMP,MMC2114_EPORT_EPFR,8)

/* Write access macros for general use */
#define MMC2114_WR_EPORT_EPPAR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_EPORT_EPPAR,16,DATA)
#define MMC2114_WR_EPORT_EPDDR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_EPORT_EPDDR,8,DATA)
#define MMC2114_WR_EPORT_EPIER(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_EPORT_EPIER,8,DATA)
#define MMC2114_WR_EPORT_EPDR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_EPORT_EPDR,8,DATA)
#define MMC2114_WR_EPORT_EPPDR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_EPORT_EPPDR,8,DATA)
#define MMC2114_WR_EPORT_EPFR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_EPORT_EPFR,8,DATA)

/* Bit field defines */
#define MMC2114_EPORT_EPPAR_LEVEL         (0x00)
#define MMC2114_EPORT_EPPAR_REDGE         (0x01)
#define MMC2114_EPORT_EPPAR_FEDGE         (0x02)
#define MMC2114_EPORT_EPPAR_BEDGE         (0x03)
#define MMC2114_EPORT_EPPAR_EPPA(a)(b)    ((b)<<(((a)&0x03)*2))

#define MMC2114_EPORT_EPDDR_EPOUT(a)      (0x01<<(a))

#define MMC2114_EPORT_EPIER_INT(a)        (0x01<<(a))

#define MMC2114_EPORT_EPDR_EPD(a)         (0x01<<(a))

#define MMC2114_EPORT_EPPDR_EPD(a)        (0x01<<(a))

#define MMC2114_EPORT_EPFR_EPF(a)         (0x01<<(a))

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_EPORT_OFFSET];
    uint16	EPPAR;
    uint8	EPDDR;
    uint8	EPIER;
    uint8	EPDR;
    uint8	EPPDR;
    uint8	EPFR;
} MMC2114_EPORT;


/***********************************************************************
 *
 * Watchdof Timer Module, WDT
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_WDT_OFFSET          (0x00070000)

/* Register offsets */
#define MMC2114_WDT_WCR		    (MMC2114_WDT_OFFSET+0x0000)
#define MMC2114_WDT_WMR		    (MMC2114_WDT_OFFSET+0x0002)
#define MMC2114_WDT_WCNTR		(MMC2114_WDT_OFFSET+0x0004)
#define MMC2114_WDT_WSR		    (MMC2114_WDT_OFFSET+0x0006)

/* Read access macros for general use */
#define MMC2114_RD_WDT_WCR(IMMP)	  MMC2114_iord(IMMP,MMC2114_WDT_WCR,16)
#define MMC2114_RD_WDT_WMR(IMMP)	  MMC2114_iord(IMMP,MMC2114_WDT_WMR,16)
#define MMC2114_RD_WDT_WCNTR(IMMP)	  MMC2114_iord(IMMP,MMC2114_WDT_WCNTR,16)
#define MMC2114_RD_WDT_WSR(IMMP)	  MMC2114_iord(IMMP,MMC2114_WDT_WSR,16)

/* Write access macros for general use */
#define MMC2114_WR_WDT_WCR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_WDT_WCR,16,DATA)
#define MMC2114_WR_WDT_WMR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_WDT_WMR,16,DATA)
#define MMC2114_WR_WDT_WCNTR(IMMP,DATA)  MMC2114_iowr(IMMP,MMC2114_WDT_WCNTR,16,DATA)
#define MMC2114_WR_WDT_WSR(IMMP,DATA)    MMC2114_iowr(IMMP,MMC2114_WDT_WSR,16,DATA)

/* Bit field defines */
#define MMC2114_WDT_WCR_WAIT         (0x0008)
#define MMC2114_WDT_WCR_DOZE         (0x0004)
#define MMC2114_WDT_WCR_DBG          (0x0002)
#define MMC2114_WDT_WCR_EN           (0x0001)

#define MMC2114_WDT_WSR_SET          (0x5555)
#define MMC2114_WDT_WSR_RESET        (0xAAAA)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_WDT_OFFSET];
    uint16	WCR;
    uint16	WMR;
    uint16  WCNTR;
    uint16  WSR;
} MMC2114_WDT;


/***********************************************************************
 *
 * Programmable Interrupt Timer Module Common Defines
 *
 ***********************************************************************/

/* Bit field defines */
#define MMC2114_PIT_PCSR_CLK_DIV_1        (0x00)
#define MMC2114_PIT_PCSR_CLK_DIV_2        (0x01)
#define MMC2114_PIT_PCSR_CLK_DIV_4        (0x02)
#define MMC2114_PIT_PCSR_CLK_DIV_8        (0x03)
#define MMC2114_PIT_PCSR_CLK_DIV_16       (0x04)
#define MMC2114_PIT_PCSR_CLK_DIV_32       (0x05)
#define MMC2114_PIT_PCSR_CLK_DIV_64       (0x06)
#define MMC2114_PIT_PCSR_CLK_DIV_128      (0x07)
#define MMC2114_PIT_PCSR_CLK_DIV_256      (0x08)
#define MMC2114_PIT_PCSR_CLK_DIV_512      (0x09)
#define MMC2114_PIT_PCSR_CLK_DIV_1024     (0x0A)
#define MMC2114_PIT_PCSR_CLK_DIV_2048     (0x0B)
#define MMC2114_PIT_PCSR_CLK_DIV_4096     (0x0C)
#define MMC2114_PIT_PCSR_CLK_DIV_8192     (0x0D)
#define MMC2114_PIT_PCSR_CLK_DIV_16384    (0x0E)
#define MMC2114_PIT_PCSR_CLK_DIV_32768    (0x0F)

#define MMC2114_PIT_PCSR_PRE(a)           ((a)&0x0F<<8)
#define MMC2114_PIT_PCSR_PDOZE            (0x0040)
#define MMC2114_PIT_PCSR_PDBG             (0x0020)
#define MMC2114_PIT_PCSR_OVW              (0x0010)
#define MMC2114_PIT_PCSR_PIE              (0x0008)
#define MMC2114_PIT_PCSR_PIF              (0x0004)
#define MMC2114_PIT_PCSR_RLD              (0x0002)
#define MMC2114_PIT_PCSR_EN               (0x0001)

/***********************************************************************
 *
 * Programmable Interrupt Timer 1 Module, PIT1
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_PIT1_OFFSET         (0x00080000)

/* Register offsets */
#define MMC2114_PIT1_PCSR		    (MMC2114_PIT1_OFFSET+0x0000)
#define MMC2114_PIT1_PMR		    (MMC2114_PIT1_OFFSET+0x0002)
#define MMC2114_PIT1_PCNTR		    (MMC2114_PIT1_OFFSET+0x0004)

/* Read access macros for general use */
#define MMC2114_RD_PIT1_PCSR(IMMP)	  MMC2114_iord(IMMP,MMC2114_PIT1_PCSR,16)
#define MMC2114_RD_PIT1_PMR(IMMP)	  MMC2114_iord(IMMP,MMC2114_PIT1_PMR,16)
#define MMC2114_RD_PIT1_PCNTR(IMMP)	  MMC2114_iord(IMMP,MMC2114_PIT1_PCNTR,16)

/* Write access macros for general use */
#define MMC2114_WR_PIT1_PCSR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_PIT1_PCSR,16,DATA)
#define MMC2114_WR_PIT1_PMR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_PIT1_PMR,16,DATA)
#define MMC2114_WR_PIT1_PCNTR(IMMP,DATA)  MMC2114_iowr(IMMP,MMC2114_PIT1_PCNTR,16,DATA)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_PIT1_OFFSET];
    uint16	PCSR;
    uint16	PMR;
    uint16	PCNTR;
} MMC2114_PIT1;


/***********************************************************************
 *
 * Programmable Interrupt Timer 2 Module, PIT2
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_PIT2_OFFSET         (0x00090000)

/* Register offsets */
#define MMC2114_PIT2_PCSR		    (MMC2114_PIT2_OFFSET+0x0000)
#define MMC2114_PIT2_PMR		    (MMC2114_PIT2_OFFSET+0x0002)
#define MMC2114_PIT2_PCNTR		    (MMC2114_PIT2_OFFSET+0x0004)

/* Read access macros for general use */
#define MMC2114_RD_PIT2_PCSR(IMMP)	  MMC2114_iord(IMMP,MMC2114_PIT2_PCSR,16)
#define MMC2114_RD_PIT2_PMR(IMMP)	  MMC2114_iord(IMMP,MMC2114_PIT2_PMR,16)
#define MMC2114_RD_PIT2_PCNTR(IMMP)	  MMC2114_iord(IMMP,MMC2114_PIT2_PCNTR,16)

/* Write access macros for general use */
#define MMC2114_WR_PIT2_PCSR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_PIT2_PCSR,16,DATA)
#define MMC2114_WR_PIT2_PMR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_PIT2_PMR,16,DATA)
#define MMC2114_WR_PIT2_PCNTR(IMMP,DATA)  MMC2114_iowr(IMMP,MMC2114_PIT2_PCNTR,16,DATA)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_PIT2_OFFSET];
    uint16	PCSR;
    uint16	PMR;
    uint16	PCNTR;
} MMC2114_PIT2;


/***********************************************************************
 *
 * Queued A-to-D Module, QADC
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_QADC_OFFSET         (0x000A0000)

/* Register offsets */
#define MMC2114_QADC_QADCMCR	    (MMC2114_QADC_OFFSET+0x0000)
#define MMC2114_QADC_QADCTEST	    (MMC2114_QADC_OFFSET+0x0002)
#define MMC2114_QADC_PORTQA	        (MMC2114_QADC_OFFSET+0x0006)
#define MMC2114_QADC_PORTQB	        (MMC2114_QADC_OFFSET+0x0007)
#define MMC2114_QADC_DDRQA	        (MMC2114_QADC_OFFSET+0x0008)
#define MMC2114_QADC_DDRQB	        (MMC2114_QADC_OFFSET+0x0009)
#define MMC2114_QADC_QACR0	        (MMC2114_QADC_OFFSET+0x000A)
#define MMC2114_QADC_QACR1	        (MMC2114_QADC_OFFSET+0x000C)
#define MMC2114_QADC_QACR2	        (MMC2114_QADC_OFFSET+0x000E)
#define MMC2114_QADC_QASR0	        (MMC2114_QADC_OFFSET+0x0010)
#define MMC2114_QADC_QASR1	        (MMC2114_QADC_OFFSET+0x0012)
#define MMC2114_QADC_CCW            (MMC2114_QADC_OFFSET+0x0200)
#define MMC2114_QADC_RJURR	        (MMC2114_QADC_OFFSET+0x0280)
#define MMC2114_QADC_LJSRR	        (MMC2114_QADC_OFFSET+0x0300)
#define MMC2114_QADC_LJURR	        (MMC2114_QADC_OFFSET+0x0380)

/* Read access macros for general use */
#define MMC2114_RD_QADC_QADCMCR(IMMP)	  MMC2114_iord(IMMP,MMC2114_QADC_QADCMCR,16)
#define MMC2114_RD_QADC_QADCTEST(IMMP)	  MMC2114_iord(IMMP,MMC2114_QADC_QADCTEST,16)
#define MMC2114_RD_QADC_PORTQA(IMMP)	  MMC2114_iord(IMMP,MMC2114_QADC_PORTQA,8)
#define MMC2114_RD_QADC_PORTQB(IMMP)	  MMC2114_iord(IMMP,MMC2114_QADC_PORTQB,8)
#define MMC2114_RD_QADC_DDRQA(IMMP)	      MMC2114_iord(IMMP,MMC2114_QADC_DDRQA,8)
#define MMC2114_RD_QADC_DDRQB(IMMP)	      MMC2114_iord(IMMP,MMC2114_QADC_DDRQB,8)
#define MMC2114_RD_QADC_QACR0(IMMP)	      MMC2114_iord(IMMP,MMC2114_QADC_QACR0,16)
#define MMC2114_RD_QADC_QACR1(IMMP)	      MMC2114_iord(IMMP,MMC2114_QADC_QACR1,16)
#define MMC2114_RD_QADC_QACR2(IMMP)	      MMC2114_iord(IMMP,MMC2114_QADC_QACR2,16)
#define MMC2114_RD_QADC_QASR0(IMMP)	      MMC2114_iord(IMMP,MMC2114_QADC_QASR0,16)
#define MMC2114_RD_QADC_QASR1(IMMP)	      MMC2114_iord(IMMP,MMC2114_QADC_QASR1,16)

/* Write access macros for general use */
#define MMC2114_WR_QADC_QADCMCR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_QADCMCR,16,DATA)
#define MMC2114_WR_QADC_QADCTEST(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_QADCTEST,16,DATA)
#define MMC2114_WR_QADC_PORTQA(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_PORTQA,8,DATA)
#define MMC2114_WR_QADC_PORTQB(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_PORTQB,8,DATA)
#define MMC2114_WR_QADC_DDRQA(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_DDRQA,8,DATA)
#define MMC2114_WR_QADC_DDRQB(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_DDRQB,8,DATA)
#define MMC2114_WR_QADC_QACR0(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_QACR0,16,DATA)
#define MMC2114_WR_QADC_QACR1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_QACR1,16,DATA)
#define MMC2114_WR_QADC_QACR2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_QACR2,16,DATA)
#define MMC2114_WR_QADC_QASR0(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_QASR0,16,DATA)
#define MMC2114_WR_QADC_QASR1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_QADC_QASR1,16,DATA)

/* Bit field defines */
#define MMC2114_QADC_QADCMCR_QSTOP         (0x8000)
#define MMC2114_QADC_QADCMCR_QDBG          (0x4000)
#define MMC2114_QADC_QADCMCR_SUPV          (0x0080)

#define MMC2114_QADC_PORTQA_PQA0           (0x01)
#define MMC2114_QADC_PORTQA_PQA1           (0x02)
#define MMC2114_QADC_PORTQA_PQA3           (0x08)
#define MMC2114_QADC_PORTQA_PQA4           (0x10)

#define MMC2114_QADC_PORTQB_PQB0           (0x01)
#define MMC2114_QADC_PORTQB_PQB1           (0x02)
#define MMC2114_QADC_PORTQB_PQB2           (0x04)
#define MMC2114_QADC_PORTQB_PQB3           (0x08)

#define MMC2114_QADC_DDRQA_PQA0            (0x01)
#define MMC2114_QADC_DDRQA_PQA1            (0x02)
#define MMC2114_QADC_DDRQA_PQA3            (0x08)
#define MMC2114_QADC_DDRQA_PQA4            (0x10)

#define MMC2114_QADC_DDRQB_PQB0            (0x01)
#define MMC2114_QADC_DDRQB_PQB1            (0x02)
#define MMC2114_QADC_DDRQB_PQB2            (0x04)
#define MMC2114_QADC_DDRQB_PQB3            (0x08)

#define MMC2114_QADC_QACR0_MUX             (0x8000)
#define MMC2114_QADC_QACR0_TRG             (0x1000)
#define MMC2114_QADC_QACR0_QPRE(a)         ((a-1)&0x7F)

#define MMC2114_QADC_QACR1_CIE1            (0x8000)
#define MMC2114_QADC_QACR1_PIE1            (0x4000)
#define MMC2114_QADC_QACR1_SSE1            (0x2000)
#define MMC2114_QADC_QACR1_MQ1(a)          (((a)&0x1F)<<8)

#define MMC2114_QADC_QACR2_CIE1            (0x8000)
#define MMC2114_QADC_QACR2_PIE1            (0x4000)
#define MMC2114_QADC_QACR2_SSE1            (0x2000)
#define MMC2114_QADC_QACR2_RESUME          (0x0080)
#define MMC2114_QADC_QACR2_MQ2(a)          (((a)&0x1F)<<8)
#define MMC2114_QADC_QACR2_BQ2(a)          ((a)&0x7F)

#define MMC2114_QADC_QACR_MODE_DISABLED        (0x00)
#define MMC2114_QADC_QACR_MODE_ST_SS           (0x01)
#define MMC2114_QADC_QACR_MODE_ET_RE_SS        (0x02)
#define MMC2114_QADC_QACR_MODE_ET_FE_SS        (0x03)
#define MMC2114_QADC_QACR_MODE_TT_SS_128       (0x04)
#define MMC2114_QADC_QACR_MODE_TT_SS_256       (0x05)
#define MMC2114_QADC_QACR_MODE_TT_SS_512       (0x06)
#define MMC2114_QADC_QACR_MODE_TT_SS_1024      (0x07)
#define MMC2114_QADC_QACR_MODE_TT_SS_2048      (0x08)
#define MMC2114_QADC_QACR_MODE_TT_SS_4096      (0x09)
#define MMC2114_QADC_QACR_MODE_TT_SS_8192      (0x0A)
#define MMC2114_QADC_QACR_MODE_TT_SS_16384     (0x0B)
#define MMC2114_QADC_QACR_MODE_TT_SS_32768     (0x0C)
#define MMC2114_QADC_QACR_MODE_TT_SS_65536     (0x0D)
#define MMC2114_QADC_QACR_MODE_TT_SS_131072    (0x0E)
#define MMC2114_QADC_QACR_MODE_EG_SS           (0x0F)
#define MMC2114_QADC_QACR_MODE_ST_CS           (0x11)
#define MMC2114_QADC_QACR_MODE_ET_RE_CS        (0x12)
#define MMC2114_QADC_QACR_MODE_ET_FE_CS        (0x13)
#define MMC2114_QADC_QACR_MODE_PT_CS_128       (0x14)
#define MMC2114_QADC_QACR_MODE_PT_CS_256       (0x15)
#define MMC2114_QADC_QACR_MODE_PT_CS_512       (0x16)
#define MMC2114_QADC_QACR_MODE_PT_CS_1024      (0x17)
#define MMC2114_QADC_QACR_MODE_PT_CS_2048      (0x18)
#define MMC2114_QADC_QACR_MODE_PT_CS_4096      (0x19)
#define MMC2114_QADC_QACR_MODE_PT_CS_8192      (0x1A)
#define MMC2114_QADC_QACR_MODE_PT_CS_16384     (0x1B)
#define MMC2114_QADC_QACR_MODE_PT_CS_32768     (0x1C)
#define MMC2114_QADC_QACR_MODE_PT_CS_65536     (0x1D)
#define MMC2114_QADC_QACR_MODE_PT_CS_131072    (0x1E)
#define MMC2114_QADC_QACR_MODE_EG_CS           (0x1F)

#define MMC2114_QADC_QASR0_CF1             (0x8000)
#define MMC2114_QADC_QASR0_PF1             (0x4000)
#define MMC2114_QADC_QASR0_CF2             (0x2000)
#define MMC2114_QADC_QASR0_PF2             (0x1000)
#define MMC2114_QADC_QASR0_TOR1            (0x0800)
#define MMC2114_QADC_QASR0_TOR2            (0x0400)
#define MMC2114_QADC_QASR0_QSTAT           (0x03C0)
#define MMC2114_QADC_QASR0_CWPOINT         (0x003F)

#define MMC2114_QADC_QASR1_Q1POINT         (0x3F00)
#define MMC2114_QADC_QASR0_Q2POINT         (0x003F)

#define MMC2114_QADC_QUEUE1_IDLE_QUEUE2_IDLE     (0x00)
#define MMC2114_QADC_QUEUE1_IDLE_QUEUE2_PAUSE    (0x01)
#define MMC2114_QADC_QUEUE1_IDLE_QUEUE2_ACTIVE   (0x02)
#define MMC2114_QADC_QUEUE1_IDLE_QUEUE2_PEND     (0x03)
#define MMC2114_QADC_QUEUE1_PAUSE_QUEUE2_IDLE    (0x04)
#define MMC2114_QADC_QUEUE1_PAUSE_QUEUE2_PAUSE   (0x05)
#define MMC2114_QADC_QUEUE1_PAUSE_QUEUE2_ACTIVE  (0x06)
#define MMC2114_QADC_QUEUE1_PAUSE_QUEUE2_PEND    (0x07)
#define MMC2114_QADC_QUEUE1_ACTIVE_QUEUE2_IDLE   (0x08)
#define MMC2114_QADC_QUEUE1_ACTIVE_QUEUE2_PAUSE  (0x09)
#define MMC2114_QADC_QUEUE1_ACTIVE_QUEUE2_ACTIVE (0x0A)
#define MMC2114_QADC_QUEUE1_ACTIVE_QUEUE2_PEND   (0x0B)

#define MMC2114_QADC_CCW_PAUSE             (0x0200)
#define MMC2114_QADC_CCW_BYPASS            (0x0100)
#define MMC2114_QADC_CCW_SAMPLE_TIME(a)    (((a)&0x03)<<6)

#define MMC2114_QADC_CCW_SAMPLE_TIME_2     (0x0)
#define MMC2114_QADC_CCW_SAMPLE_TIME_4     (0x1)
#define MMC2114_QADC_CCW_SAMPLE_TIME_8     (0x2)
#define MMC2114_QADC_CCW_SAMPLE_TIME_16    (0x3)

#define MMC2114_QADC_CCW_CHANNEL(a)        ((a)&0x3F)

#define MMC2114_QADC_CCW_CHANNEL_AN0       (0x00)
#define MMC2114_QADC_CCW_CHANNEL_AN1       (0x01)
#define MMC2114_QADC_CCW_CHANNEL_AN2       (0x02)
#define MMC2114_QADC_CCW_CHANNEL_AN3       (0x03)
#define MMC2114_QADC_CCW_CHANNEL_AN52      (0x34)
#define MMC2114_QADC_CCW_CHANNEL_AN53      (0x35)
#define MMC2114_QADC_CCW_CHANNEL_AN55      (0x37)
#define MMC2114_QADC_CCW_CHANNEL_AN56      (0x38)
#define MMC2114_QADC_CCW_REF_LOW           (0x3C)
#define MMC2114_QADC_CCW_REF_HIGH          (0x3D)
#define MMC2114_QADC_CCW_REF_HALF          (0x3E)
#define MMC2114_QADC_CCW_END_OF_QUEUE      (0x3F)

#define MMC2114_QADC_CCW_MCHANNEL_ANW0     (0x00)
#define MMC2114_QADC_CCW_MCHANNEL_ANW1     (0x02)
#define MMC2114_QADC_CCW_MCHANNEL_ANW2     (0x04)
#define MMC2114_QADC_CCW_MCHANNEL_ANW3     (0x06)
#define MMC2114_QADC_CCW_MCHANNEL_ANX0     (0x01)
#define MMC2114_QADC_CCW_MCHANNEL_ANX1     (0x03)
#define MMC2114_QADC_CCW_MCHANNEL_ANX2     (0x05)
#define MMC2114_QADC_CCW_MCHANNEL_ANX3     (0x07)
#define MMC2114_QADC_CCW_MCHANNEL_ANY0     (0x10)
#define MMC2114_QADC_CCW_MCHANNEL_ANY1     (0x12)
#define MMC2114_QADC_CCW_MCHANNEL_ANY2     (0x14)
#define MMC2114_QADC_CCW_MCHANNEL_ANY3     (0x16)
#define MMC2114_QADC_CCW_MCHANNEL_ANZ0     (0x11)
#define MMC2114_QADC_CCW_MCHANNEL_ANZ1     (0x13)
#define MMC2114_QADC_CCW_MCHANNEL_ANZ2     (0x15)
#define MMC2114_QADC_CCW_MCHANNEL_ANZ3     (0x17)

#define MMC2114_QADC_RJURR_MASK       (0x03FF)
#define MMC2114_QADC_LJSRR_MASK       (0xFFC0)
#define MMC2114_QADC_LJURR_MASK       (0xFFC0)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_QADC_OFFSET];
    uint16	QADCMCR;
    uint16	QADCTEST;
    uint8	Reserved1[0x2];
    uint8	PORTQA;
    uint8	PORTQB;
    uint8	DDRQA;
    uint8	DDRQB;
    uint16	QACR0;
    uint16	QACR1;
    uint16	QACR2;
    uint16	QASR0;
    uint16	QASR1;
    uint8	Reserved2[0x01EC];
    uint16	CCW[64];
    uint16	RJURR[64];
    uint16	LJSRR[64];
    uint16	LJURR[64];
} MMC2114_QADC;


/***********************************************************************
 *
 * Serial Peripheral Interface Module, SPI
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_SPI_OFFSET          (0x000B0000)

/* Register offsets */
#define MMC2114_SPI_SPICR1		    (MMC2114_SPI_OFFSET+0x0000)
#define MMC2114_SPI_SPICR2		    (MMC2114_SPI_OFFSET+0x0001)
#define MMC2114_SPI_SPIBR		    (MMC2114_SPI_OFFSET+0x0002)
#define MMC2114_SPI_SPISR		    (MMC2114_SPI_OFFSET+0x0003)
#define MMC2114_SPI_SPIDR		    (MMC2114_SPI_OFFSET+0x0005)
#define MMC2114_SPI_SPIPURD		    (MMC2114_SPI_OFFSET+0x0006)
#define MMC2114_SPI_SPIPORT		    (MMC2114_SPI_OFFSET+0x0007)
#define MMC2114_SPI_SPIDDR		    (MMC2114_SPI_OFFSET+0x0008)

/* Read access macros for general use */
#define MMC2114_RD_SPI_SPICR1(IMMP)	  MMC2114_iord(IMMP,MMC2114_SPI_SPICR1,8)
#define MMC2114_RD_SPI_SPICR2(IMMP)	  MMC2114_iord(IMMP,MMC2114_SPI_SPICR2,8)
#define MMC2114_RD_SPI_SPIBR(IMMP)	  MMC2114_iord(IMMP,MMC2114_SPI_SPIBR,8)
#define MMC2114_RD_SPI_SPISR(IMMP)	  MMC2114_iord(IMMP,MMC2114_SPI_SPISR,8)
#define MMC2114_RD_SPI_SPIDR(IMMP)	  MMC2114_iord(IMMP,MMC2114_SPI_SPIDR,8)
#define MMC2114_RD_SPI_SPIPURD(IMMP)  MMC2114_iord(IMMP,MMC2114_SPI_SPIPURD,8)
#define MMC2114_RD_SPI_SPIPORT(IMMP)  MMC2114_iord(IMMP,MMC2114_SPI_SPIPORT,8)
#define MMC2114_RD_SPI_SPIDDR(IMMP)	  MMC2114_iord(IMMP,MMC2114_SPI_SPIDDR,8)

/* Write access macros for general use */
#define MMC2114_WR_SPI_SPICR1(IMMP,DATA)   MMC2114_iowr(IMMP,MMC2114_SPI_SPICR1,8,DATA)
#define MMC2114_WR_SPI_SPICR2(IMMP,DATA)   MMC2114_iowr(IMMP,MMC2114_SPI_SPICR2,8,DATA)
#define MMC2114_WR_SPI_SPIBR(IMMP,DATA)	   MMC2114_iowr(IMMP,MMC2114_SPI_SPIBR,8,DATA)
#define MMC2114_WR_SPI_SPISR(IMMP,DATA)	   MMC2114_iowr(IMMP,MMC2114_SPI_SPISR,8,DATA)
#define MMC2114_WR_SPI_SPIDR(IMMP,DATA)	   MMC2114_iowr(IMMP,MMC2114_SPI_SPIDR,8,DATA)
#define MMC2114_WR_SPI_SPIPURD(IMMP,DATA)  MMC2114_iowr(IMMP,MMC2114_SPI_SPIPURD,8,DATA)
#define MMC2114_WR_SPI_SPIPORT(IMMP,DATA)  MMC2114_iowr(IMMP,MMC2114_SPI_SPIPORT,8,DATA)
#define MMC2114_WR_SPI_SPIDDR(IMMP,DATA)   MMC2114_iowr(IMMP,MMC2114_SPI_SPIDDR,8,DATA)

/* Bit field defines */
#define MMC2114_SPI_SPICR1_SPIE           (0x80)
#define MMC2114_SPI_SPICR1_SPE            (0x40)
#define MMC2114_SPI_SPICR1_SWOM           (0x20)
#define MMC2114_SPI_SPICR1_MSTR           (0x10)
#define MMC2114_SPI_SPICR1_CPOL           (0x08)
#define MMC2114_SPI_SPICR1_CPHA           (0x04)
#define MMC2114_SPI_SPICR1_SSOE           (0x02)
#define MMC2114_SPI_SPICR1_LSBFE          (0x01)

#define MMC2114_SPI_SPICR2_SPISDOZ        (0x02)
#define MMC2114_SPI_SPICR2_SPC0           (0x01)

#define MMC2114_SPI_SPIBR_PRE_0           (0x00)
#define MMC2114_SPI_SPIBR_PRE_2           (0x01)
#define MMC2114_SPI_SPIBR_PRE_3           (0x02)
#define MMC2114_SPI_SPIBR_PRE_4           (0x03)
#define MMC2114_SPI_SPIBR_PRE_5           (0x04)
#define MMC2114_SPI_SPIBR_PRE_6           (0x05)
#define MMC2114_SPI_SPIBR_PRE_7           (0x06)
#define MMC2114_SPI_SPIBR_PRE_8           (0x07)

#define MMC2114_SPI_SPIBR_SPEED_2         (0x00)
#define MMC2114_SPI_SPIBR_SPEED_4         (0x01)
#define MMC2114_SPI_SPIBR_SPEED_8         (0x02)
#define MMC2114_SPI_SPIBR_SPEED_16        (0x03)
#define MMC2114_SPI_SPIBR_SPEED_32        (0x04)
#define MMC2114_SPI_SPIBR_SPEED_64        (0x05)
#define MMC2114_SPI_SPIBR_SPEED_128       (0x06)
#define MMC2114_SPI_SPIBR_SPEED_256       (0x07)

#define MMC2114_SPI_SPIBR_SPPR(a)         ((a)&0x07<<4)
#define MMC2114_SPI_SPIBR_SPR(a)          ((a)&0x07)

#define MMC2114_SPI_SPISR_SPIF            (0x80)
#define MMC2114_SPI_SPISR_WCOL            (0x40)
#define MMC2114_SPI_SPISR_MODF            (0x10)

#define MMC2114_SPI_SPIPURD_RDPSP         (0x10)
#define MMC2114_SPI_SPIPURD_PUPSP         (0x01)

#define MMC2114_SPI_SPIPORT_PORTSP0       (0x01)
#define MMC2114_SPI_SPIPORT_PORTSP1       (0x02)
#define MMC2114_SPI_SPIPORT_PORTSP2       (0x04)
#define MMC2114_SPI_SPIPORT_PORTSP3       (0x08)

#define MMC2114_SPI_SPIDDR_PORTSP0        (0x01)
#define MMC2114_SPI_SPIDDR_PORTSP1        (0x02)
#define MMC2114_SPI_SPIDDR_PORTSP2        (0x04)
#define MMC2114_SPI_SPIDDR_PORTSP3        (0x08)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_SPI_OFFSET];
    uint8	SPICR1;
    uint8	SPICR2;
    uint8	SPIBR;
    uint8	SPISR;
    uint8	Reserved1[0x01];
    uint8	SPIDR;
    uint8	SPIPURD;
    uint8	SPIPORT;
    uint8	SPIDDR;
} MMC2114_SPI;


/***********************************************************************
 *
 * Serial Communications Common Defines
 *
 ***********************************************************************/

/* Bit field defines */
#define MMC2114_SCI_SCICR1_LOOPS        (0x80)
#define MMC2114_SCI_SCICR1_WOMS         (0x40)
#define MMC2114_SCI_SCICR1_RSRC         (0x20)
#define MMC2114_SCI_SCICR1_M            (0x10)
#define MMC2114_SCI_SCICR1_WAKE         (0x08)
#define MMC2114_SCI_SCICR1_ILT          (0x04)
#define MMC2114_SCI_SCICR1_PE           (0x02)
#define MMC2114_SCI_SCICR1_PT           (0x01)

#define MMC2114_SCI_SCICR2_TIE          (0x80)
#define MMC2114_SCI_SCICR2_TCIE         (0x40)
#define MMC2114_SCI_SCICR2_RIE          (0x20)
#define MMC2114_SCI_SCICR2_ILIE         (0x10)
#define MMC2114_SCI_SCICR2_TE           (0x08)
#define MMC2114_SCI_SCICR2_RE           (0x04)
#define MMC2114_SCI_SCICR2_RWU          (0x02)
#define MMC2114_SCI_SCICR2_SBK          (0x01)

#define MMC2114_SCI_SCISR1_TDRE         (0x80)
#define MMC2114_SCI_SCISR1_TC           (0x40)
#define MMC2114_SCI_SCISR1_RDRF         (0x20)
#define MMC2114_SCI_SCISR1_IDLE         (0x10)
#define MMC2114_SCI_SCISR1_OR           (0x08)
#define MMC2114_SCI_SCISR1_NF           (0x04)
#define MMC2114_SCI_SCISR1_FE           (0x02)
#define MMC2114_SCI_SCISR1_PF           (0x01)

#define MMC2114_SCI_SCISR2_RAF          (0x01)

#define MMC2114_SCI_SCIPURD_SCISDOZ     (0x80)
#define MMC2114_SCI_SCIPURD_RDPSCI      (0x10)
#define MMC2114_SCI_SCIPURD_PUPSCI      (0x01)

#define MMC2114_SCI_SCIPORT_PORTSC0     (0x01)
#define MMC2114_SCI_SCIPORT_PORTSC1     (0x02)


/***********************************************************************
 *
 * Serial Communications Interface 1 Module, SCI1
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_SCI1_OFFSET         (0x000C0000)

/* Register offsets */
#define MMC2114_SCI1_SCIBDH		    (MMC2114_SCI1_OFFSET+0x0000)
#define MMC2114_SCI1_SCIBDL		    (MMC2114_SCI1_OFFSET+0x0001)
#define MMC2114_SCI1_SCICR1		    (MMC2114_SCI1_OFFSET+0x0002)
#define MMC2114_SCI1_SCICR2		    (MMC2114_SCI1_OFFSET+0x0003)
#define MMC2114_SCI1_SCISR1		    (MMC2114_SCI1_OFFSET+0x0004)
#define MMC2114_SCI1_SCISR2		    (MMC2114_SCI1_OFFSET+0x0005)
#define MMC2114_SCI1_SCIDRH		    (MMC2114_SCI1_OFFSET+0x0006)
#define MMC2114_SCI1_SCIDRL		    (MMC2114_SCI1_OFFSET+0x0007)
#define MMC2114_SCI1_SCIPURD	    (MMC2114_SCI1_OFFSET+0x0008)
#define MMC2114_SCI1_SCIPORT	    (MMC2114_SCI1_OFFSET+0x0009)
#define MMC2114_SCI1_SCIDDR		    (MMC2114_SCI1_OFFSET+0x000A)

/* Read access macros for general use */
#define MMC2114_RD_SCI1_SCIBDH(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCIBDH,8)
#define MMC2114_RD_SCI1_SCIBDL(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCIBDL,8)
#define MMC2114_RD_SCI1_SCICR1(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCICR1,8)
#define MMC2114_RD_SCI1_SCICR2(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCICR2,8)
#define MMC2114_RD_SCI1_SCISR1(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCISR1,8)
#define MMC2114_RD_SCI1_SCISR2(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCISR2,8)
#define MMC2114_RD_SCI1_SCIDRH(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCIDRH,8)
#define MMC2114_RD_SCI1_SCIDRL(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCIDRL,8)
#define MMC2114_RD_SCI1_SCIPURD(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCIPURD,8)
#define MMC2114_RD_SCI1_SCIPORT(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCIPORT,8)
#define MMC2114_RD_SCI1_SCIDDR(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI1_SCIDDR,8)

/* Write access macros for general use */
#define MMC2114_WR_SCI1_SCIBDH(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCIBDH,8,DATA)
#define MMC2114_WR_SCI1_SCIBDL(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCIBDL,8,DATA)
#define MMC2114_WR_SCI1_SCICR1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCICR1,8,DATA)
#define MMC2114_WR_SCI1_SCICR2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCICR2,8,DATA)
#define MMC2114_WR_SCI1_SCISR1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCISR1,8,DATA)
#define MMC2114_WR_SCI1_SCISR2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCISR2,8,DATA)
#define MMC2114_WR_SCI1_SCIDRH(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCIDRH,8,DATA)
#define MMC2114_WR_SCI1_SCIDRL(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCIDRL,8,DATA)
#define MMC2114_WR_SCI1_SCIPURD(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCIPURD,8,DATA)
#define MMC2114_WR_SCI1_SCIPORT(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCIPORT,8,DATA)
#define MMC2114_WR_SCI1_SCIDDR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI1_SCIDDR,8,DATA)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_SCI1_OFFSET];
    uint8	SCIBDH;
    uint8	SCIBDL;
    uint8	SCICR1;
    uint8	SCICR2;
    uint8	SCISR1;
    uint8	SCISR2;
    uint8	SCIDRH;
    uint8	SCIDRL;
    uint8	SCIPURD;
    uint8	SCIPORT;
    uint8	SCIDDR;
} MMC2114_SCI1;


/***********************************************************************
 *
 * Serial Communications Interface 2 Module, SCI2
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_SCI2_OFFSET         (0x000D0000)

/* Register offsets */
#define MMC2114_SCI2_SCIBDH		    (MMC2114_SCI2_OFFSET+0x0000)
#define MMC2114_SCI2_SCIBDL		    (MMC2114_SCI2_OFFSET+0x0001)
#define MMC2114_SCI2_SCICR1		    (MMC2114_SCI2_OFFSET+0x0002)
#define MMC2114_SCI2_SCICR2		    (MMC2114_SCI2_OFFSET+0x0003)
#define MMC2114_SCI2_SCISR1		    (MMC2114_SCI2_OFFSET+0x0004)
#define MMC2114_SCI2_SCISR2		    (MMC2114_SCI2_OFFSET+0x0005)
#define MMC2114_SCI2_SCIDRH		    (MMC2114_SCI2_OFFSET+0x0006)
#define MMC2114_SCI2_SCIDRL		    (MMC2114_SCI2_OFFSET+0x0007)
#define MMC2114_SCI2_SCIPURD	    (MMC2114_SCI2_OFFSET+0x0008)
#define MMC2114_SCI2_SCIPORT	    (MMC2114_SCI2_OFFSET+0x0009)
#define MMC2114_SCI2_SCIDDR		    (MMC2114_SCI2_OFFSET+0x000A)

/* Read access macros for general use */
#define MMC2114_RD_SCI2_SCIBDH(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCIBDH,8)
#define MMC2114_RD_SCI2_SCIBDL(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCIBDL,8)
#define MMC2114_RD_SCI2_SCICR1(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCICR1,8)
#define MMC2114_RD_SCI2_SCICR2(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCICR2,8)
#define MMC2114_RD_SCI2_SCISR1(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCISR1,8)
#define MMC2114_RD_SCI2_SCISR2(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCISR2,8)
#define MMC2114_RD_SCI2_SCIDRH(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCIDRH,8)
#define MMC2114_RD_SCI2_SCIDRL(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCIDRL,8)
#define MMC2114_RD_SCI2_SCIPURD(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCIPURD,8)
#define MMC2114_RD_SCI2_SCIPORT(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCIPORT,8)
#define MMC2114_RD_SCI2_SCIDDR(IMMP)	  MMC2114_iord(IMMP,MMC2114_SCI2_SCIDDR,8)

/* Write access macros for general use */
#define MMC2114_WR_SCI2_SCIBDH(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCIBDH,8,DATA)
#define MMC2114_WR_SCI2_SCIBDL(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCIBDL,8,DATA)
#define MMC2114_WR_SCI2_SCICR1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCICR1,8,DATA)
#define MMC2114_WR_SCI2_SCICR2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCICR2,8,DATA)
#define MMC2114_WR_SCI2_SCISR1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCISR1,8,DATA)
#define MMC2114_WR_SCI2_SCISR2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCISR2,8,DATA)
#define MMC2114_WR_SCI2_SCIDRH(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCIDRH,8,DATA)
#define MMC2114_WR_SCI2_SCIDRL(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCIDRL,8,DATA)
#define MMC2114_WR_SCI2_SCIPURD(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCIPURD,8,DATA)
#define MMC2114_WR_SCI2_SCIPORT(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCIPORT,8,DATA)
#define MMC2114_WR_SCI2_SCIDDR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_SCI2_SCIDDR,8,DATA)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_SCI2_OFFSET];
    uint8	SCIBDH;
    uint8	SCIBDL;
    uint8	SCICR1;
    uint8	SCICR2;
    uint8	SCISR1;
    uint8	SCISR2;
    uint8	SCIDRH;
    uint8	SCIDRL;
    uint8	SCIPURD;
    uint8	SCIPORT;
    uint8	SCIDDR;
} MMC2114_SCI2;


/***********************************************************************
 *
 * Timer Common Defines
 *
 ***********************************************************************/

/* Bit field defines */
#define MMC2114_TIM_TIMIOS_IOS(a)         (0x01<<((a)&0x03))

#define MMC2114_TIM_TIMCFORC_FOC(a)       (0x01<<((a)&0x03))

#define MMC2114_TIM_TIMOC3M_OC3M(a)       (0x01<<((a)&0x03))

#define MMC2114_TIM_TIMOC3D_OC3D(a)       (0x01<<((a)&0x03))

#define MMC2114_TIM_TIMSCR1_TFFCA         (0x10)

#define MMC2114_TIM_TIMTOV_TOV(a)         (0x01<<((a)&0x03))

#define MMC2114_TIM_TIMCTL1_DISCONNECT    (0x00)
#define MMC2114_TIM_TIMCTL1_TOGGLE        (0x01)
#define MMC2114_TIM_TIMCTL1_CLEAR         (0x02)
#define MMC2114_TIM_TIMCTL1_SET           (0x03)
#define MMC2114_TIM_TIMCTL1_EDGE(a)(b)    ((b)<<(((a)&0x03)*2))

#define MMC2114_TIM_TIMIE_CIE(a)          (0x01<<((a)&0x03))

#define MMC2114_TIM_TIMSCR2_TOI           (0x80)
#define MMC2114_TIM_TIMSCR2_PUPT          (0x20)
#define MMC2114_TIM_TIMSCR2_RDPT          (0x10)
#define MMC2114_TIM_TIMSCR2_TCRE          (0x08)
#define MMC2114_TIM_TIMSCR2_CLK_DIV_1     (0x00)
#define MMC2114_TIM_TIMSCR2_CLK_DIV_2     (0x01)
#define MMC2114_TIM_TIMSCR2_CLK_DIV_4     (0x02)
#define MMC2114_TIM_TIMSCR2_CLK_DIV_8     (0x03)
#define MMC2114_TIM_TIMSCR2_CLK_DIV_16    (0x04)
#define MMC2114_TIM_TIMSCR2_CLK_DIV_32    (0x05)
#define MMC2114_TIM_TIMSCR2_CLK_DIV_64    (0x06)
#define MMC2114_TIM_TIMSCR2_CLK_DIV_128   (0x07)
#define MMC2114_TIM_TIMSCR2_CLK(a)        ((a)&0x07)

#define MMC2114_TIM_TIMFLG1_C0F           (0x01)
#define MMC2114_TIM_TIMFLG1_C1F           (0x02)
#define MMC2114_TIM_TIMFLG1_C2F           (0x04)
#define MMC2114_TIM_TIMFLG1_C3F           (0x08)

#define MMC2114_TIM_TIMFLG2_TOF           (0x80)

#define MMC2114_TIM_TIMPACTL_PAE                  (0x40)
#define MMC2114_TIM_TIMPACTL_PAMOD                (0x20)
#define MMC2114_TIM_TIMPACTL_PEDGE                (0x10)
#define MMC2114_TIM_TIMPACTL_PAOVI                (0x02)
#define MMC2114_TIM_TIMPACTL_PAI                  (0x01)
#define MMC2114_TIM_TIMPACTL_CLK_PRE              (0x00)
#define MMC2114_TIM_TIMPACTL_CLK_PACLK            (0x01)
#define MMC2114_TIM_TIMPACTL_CLK_PACLK_DIV_256    (0x02)
#define MMC2114_TIM_TIMPACTL_CLK_PACLK_DIV_65536  (0x03)
#define MMC2114_TIM_TIMPACTL_CLK(a)               (((a)&0x03)<<2)

#define MMC2114_TIM_TIMPAFLG_PAOVF                (0x02)
#define MMC2114_TIM_TIMPAFLG_PAIF                 (0x01)

#define MMC2114_TIM_TIMPORT_PORT0                 (0x01)
#define MMC2114_TIM_TIMPORT_PORT1                 (0x02)
#define MMC2114_TIM_TIMPORT_PORT2                 (0x04)
#define MMC2114_TIM_TIMPORT_PORT3                 (0x08)

#define MMC2114_TIM_TIMDDR_DDRT0                  (0x01)
#define MMC2114_TIM_TIMDDR_DDRT1                  (0x02)
#define MMC2114_TIM_TIMDDR_DDRT2                  (0x04)
#define MMC2114_TIM_TIMDDR_DDRT3                  (0x08)


/***********************************************************************
 *
 * Timer 1 Module, TIM1
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_TIM1_OFFSET         (0x000E0000)

/* Register offsets */
#define MMC2114_TIM1_TIMIOS		    (MMC2114_TIM1_OFFSET+0x0000)
#define MMC2114_TIM1_TIMCFORC	    (MMC2114_TIM1_OFFSET+0x0001)
#define MMC2114_TIM1_TIMOC3M	    (MMC2114_TIM1_OFFSET+0x0002)
#define MMC2114_TIM1_TIMOC3D	    (MMC2114_TIM1_OFFSET+0x0003)
#define MMC2114_TIM1_TIMCNTH	    (MMC2114_TIM1_OFFSET+0x0004)
#define MMC2114_TIM1_TIMCNTL	    (MMC2114_TIM1_OFFSET+0x0005)
#define MMC2114_TIM1_TIMSCR1	    (MMC2114_TIM1_OFFSET+0x0006)
#define MMC2114_TIM1_TIMTOV	        (MMC2114_TIM1_OFFSET+0x0008)
#define MMC2114_TIM1_TIMCTL1	    (MMC2114_TIM1_OFFSET+0x0009)
#define MMC2114_TIM1_TIMCTL2	    (MMC2114_TIM1_OFFSET+0x000B)
#define MMC2114_TIM1_TIMIE	        (MMC2114_TIM1_OFFSET+0x000C)
#define MMC2114_TIM1_TIMSCR2	    (MMC2114_TIM1_OFFSET+0x000D)
#define MMC2114_TIM1_TIMFLG1	    (MMC2114_TIM1_OFFSET+0x000E)
#define MMC2114_TIM1_TIMFLG2	    (MMC2114_TIM1_OFFSET+0x000F)
#define MMC2114_TIM1_TIMC0H	        (MMC2114_TIM1_OFFSET+0x0010)
#define MMC2114_TIM1_TIMC0L	        (MMC2114_TIM1_OFFSET+0x0011)
#define MMC2114_TIM1_TIMC1H	        (MMC2114_TIM1_OFFSET+0x0012)
#define MMC2114_TIM1_TIMC1L	        (MMC2114_TIM1_OFFSET+0x0013)
#define MMC2114_TIM1_TIMC2H	        (MMC2114_TIM1_OFFSET+0x0014)
#define MMC2114_TIM1_TIMC2L	        (MMC2114_TIM1_OFFSET+0x0015)
#define MMC2114_TIM1_TIMC3H	        (MMC2114_TIM1_OFFSET+0x0016)
#define MMC2114_TIM1_TIMC3L	        (MMC2114_TIM1_OFFSET+0x0017)
#define MMC2114_TIM1_TIMPACTL       (MMC2114_TIM1_OFFSET+0x0018)
#define MMC2114_TIM1_TIMPAFLG       (MMC2114_TIM1_OFFSET+0x0019)
#define MMC2114_TIM1_TIMPACNTH      (MMC2114_TIM1_OFFSET+0x001A)
#define MMC2114_TIM1_TIMPACNTL      (MMC2114_TIM1_OFFSET+0x001B)
#define MMC2114_TIM1_TIMPORT        (MMC2114_TIM1_OFFSET+0x001D)
#define MMC2114_TIM1_TIMDDR         (MMC2114_TIM1_OFFSET+0x001E)
#define MMC2114_TIM1_TIMTST         (MMC2114_TIM1_OFFSET+0x001F)

/* Read access macros for general use */
#define MMC2114_RD_TIM1_TIMIOS(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMIOS,8)
#define MMC2114_RD_TIM1_TIMCFORC(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMCFORC,8)
#define MMC2114_RD_TIM1_TIMOC3M(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMOC3M,8)
#define MMC2114_RD_TIM1_TIMOC3D(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMOC3D,8)
#define MMC2114_RD_TIM1_TIMCNTH(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMCNTH,8)
#define MMC2114_RD_TIM1_TIMCNTL(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMCNTL,8)
#define MMC2114_RD_TIM1_TIMSCR1(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMSCR1,8)
#define MMC2114_RD_TIM1_TIMTOV(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMTOV,8)
#define MMC2114_RD_TIM1_TIMCTL1(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMCTL1,8)
#define MMC2114_RD_TIM1_TIMCTL2(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMCTL2,8)
#define MMC2114_RD_TIM1_TIMIE(IMMP)	      MMC2114_iord(IMMP,MMC2114_TIM1_TIMIE,8)
#define MMC2114_RD_TIM1_TIMSCR2(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMSCR2,8)
#define MMC2114_RD_TIM1_TIMFLG1(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMFLG1,8)
#define MMC2114_RD_TIM1_TIMFLG2(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMFLG2,8)
#define MMC2114_RD_TIM1_TIMC0H(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMC0H,8)
#define MMC2114_RD_TIM1_TIMC0L(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMC0L,8)
#define MMC2114_RD_TIM1_TIMC1H(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMC1H,8)
#define MMC2114_RD_TIM1_TIMC1L(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMC1L,8)
#define MMC2114_RD_TIM1_TIMC2H(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMC2H,8)
#define MMC2114_RD_TIM1_TIMC2L(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMC2L,8)
#define MMC2114_RD_TIM1_TIMC3H(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMC3H,8)
#define MMC2114_RD_TIM1_TIMC3L(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMC3L,8)
#define MMC2114_RD_TIM1_TIMPACTL(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMPACTL,8)
#define MMC2114_RD_TIM1_TIMPAFLG(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMPAFLG,8)
#define MMC2114_RD_TIM1_TIMPACNTH(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMPACNTH,8)
#define MMC2114_RD_TIM1_TIMPACNTL(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMPACNTL,8)
#define MMC2114_RD_TIM1_TIMPORT(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMPORT,8)
#define MMC2114_RD_TIM1_TIMDDR(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMDDR,8)
#define MMC2114_RD_TIM1_TIMTST(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM1_TIMTST,8)

/* Write access macros for general use */
#define MMC2114_WR_TIM1_TIMIOS(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMIOS,8,DATA)
#define MMC2114_WR_TIM1_TIMCFORC(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMCFORC,8,DATA)
#define MMC2114_WR_TIM1_TIMOC3M(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMOC3M,8,DATA)
#define MMC2114_WR_TIM1_TIMOC3D(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMOC3D,8,DATA)
#define MMC2114_WR_TIM1_TIMCNTH(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMCNTH,8,DATA)
#define MMC2114_WR_TIM1_TIMCNTL(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMCNTL,8,DATA)
#define MMC2114_WR_TIM1_TIMSCR1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMSCR1,8,DATA)
#define MMC2114_WR_TIM1_TIMTOV(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMTOV,8,DATA)
#define MMC2114_WR_TIM1_TIMCTL1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMCTL1,8,DATA)
#define MMC2114_WR_TIM1_TIMCTL2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMCTL2,8,DATA)
#define MMC2114_WR_TIM1_TIMIE(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_TIM1_TIMIE,8,DATA)
#define MMC2114_WR_TIM1_TIMSCR2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMSCR2,8,DATA)
#define MMC2114_WR_TIM1_TIMFLG1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMFLG1,8,DATA)
#define MMC2114_WR_TIM1_TIMFLG2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMFLG2,8,DATA)
#define MMC2114_WR_TIM1_TIMC0H(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMC0H,8,DATA)
#define MMC2114_WR_TIM1_TIMC0L(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMC0L,8,DATA)
#define MMC2114_WR_TIM1_TIMC1H(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMC1H,8,DATA)
#define MMC2114_WR_TIM1_TIMC1L(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMC1L,8,DATA)
#define MMC2114_WR_TIM1_TIMC2H(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMC2H,8,DATA)
#define MMC2114_WR_TIM1_TIMC2L(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMC2L,8,DATA)
#define MMC2114_WR_TIM1_TIMC3H(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMC3H,8,DATA)
#define MMC2114_WR_TIM1_TIMC3L(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMC3L,8,DATA)
#define MMC2114_WR_TIM1_TIMPACTL(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMPACTL,8,DATA)
#define MMC2114_WR_TIM1_TIMPAFLG(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMPAFLG,8,DATA)
#define MMC2114_WR_TIM1_TIMPACNTH(IMMP,DATA)  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMPACNTH,8,DATA)
#define MMC2114_WR_TIM1_TIMPACNTL(IMMP,DATA)  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMPACNTL,8,DATA)
#define MMC2114_WR_TIM1_TIMPORT(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMPORT,8,DATA)
#define MMC2114_WR_TIM1_TIMDDR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMDDR,8,DATA)
#define MMC2114_WR_TIM1_TIMTST(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM1_TIMTST,8,DATA)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_TIM1_OFFSET];
	uint8	TIMIOS;
	uint8	TIMCFORC;
	uint8	TIMOC3M;
	uint8	TIMOC3D;
	uint8	TIMCNTH;
	uint8	TIMCNTL;
	uint8	TIMSCR1;
    uint8	Reserved1[0x01];
	uint8	TIMTOV;
	uint8	TIMCTL1;
    uint8	Reserved2[0x01];
	uint8	TIMCTL2;
	uint8	TIMIE;
	uint8	TIMSCR2;
	uint8	TIMFLG1;
	uint8	TIMFLG2;
	uint8	TIMC0H;
	uint8	TIMC0L;
	uint8	TIMC1H;
	uint8	TIMC1L;
	uint8	TIMC2H;
	uint8	TIMC2L;
	uint8	TIMC3H;
	uint8	TIMC3L;
	uint8	TIMPACTL;
	uint8	TIMPAFLG;
	uint8	TIMPACNTH;
	uint8	TIMPACNTL;
    uint8	Reserved3[0x01];
	uint8	TIMPORT;
	uint8	TIMDDR;
	uint8	TIMTST;
} MMC2114_TIM1;


/***********************************************************************
 *
 * Timer 2 Module, TIM2
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_TIM2_OFFSET         (0x000F0000)

/* Register offsets */
#define MMC2114_TIM2_TIMIOS		    (MMC2114_TIM2_OFFSET+0x0000)
#define MMC2114_TIM2_TIMCFORC	    (MMC2114_TIM2_OFFSET+0x0001)
#define MMC2114_TIM2_TIMOC3M	    (MMC2114_TIM2_OFFSET+0x0002)
#define MMC2114_TIM2_TIMOC3D	    (MMC2114_TIM2_OFFSET+0x0003)
#define MMC2114_TIM2_TIMCNTH	    (MMC2114_TIM2_OFFSET+0x0004)
#define MMC2114_TIM2_TIMCNTL	    (MMC2114_TIM2_OFFSET+0x0005)
#define MMC2114_TIM2_TIMSCR1	    (MMC2114_TIM2_OFFSET+0x0006)
#define MMC2114_TIM2_TIMTOV	        (MMC2114_TIM2_OFFSET+0x0008)
#define MMC2114_TIM2_TIMCTL1	    (MMC2114_TIM2_OFFSET+0x0009)
#define MMC2114_TIM2_TIMCTL2	    (MMC2114_TIM2_OFFSET+0x000B)
#define MMC2114_TIM2_TIMIE	        (MMC2114_TIM2_OFFSET+0x000C)
#define MMC2114_TIM2_TIMSCR2	    (MMC2114_TIM2_OFFSET+0x000D)
#define MMC2114_TIM2_TIMFLG1	    (MMC2114_TIM2_OFFSET+0x000E)
#define MMC2114_TIM2_TIMFLG2	    (MMC2114_TIM2_OFFSET+0x000F)
#define MMC2114_TIM2_TIMC0H	        (MMC2114_TIM2_OFFSET+0x0010)
#define MMC2114_TIM2_TIMC0L	        (MMC2114_TIM2_OFFSET+0x0011)
#define MMC2114_TIM2_TIMC1H	        (MMC2114_TIM2_OFFSET+0x0012)
#define MMC2114_TIM2_TIMC1L	        (MMC2114_TIM2_OFFSET+0x0013)
#define MMC2114_TIM2_TIMC2H	        (MMC2114_TIM2_OFFSET+0x0014)
#define MMC2114_TIM2_TIMC2L	        (MMC2114_TIM2_OFFSET+0x0015)
#define MMC2114_TIM2_TIMC3H	        (MMC2114_TIM2_OFFSET+0x0016)
#define MMC2114_TIM2_TIMC3L	        (MMC2114_TIM2_OFFSET+0x0017)
#define MMC2114_TIM2_TIMPACTL       (MMC2114_TIM2_OFFSET+0x0018)
#define MMC2114_TIM2_TIMPAFLG       (MMC2114_TIM2_OFFSET+0x0019)
#define MMC2114_TIM2_TIMPACNTH      (MMC2114_TIM2_OFFSET+0x001A)
#define MMC2114_TIM2_TIMPACNTL      (MMC2114_TIM2_OFFSET+0x001B)
#define MMC2114_TIM2_TIMPORT        (MMC2114_TIM2_OFFSET+0x001D)
#define MMC2114_TIM2_TIMDDR         (MMC2114_TIM2_OFFSET+0x001E)
#define MMC2114_TIM2_TIMTST         (MMC2114_TIM2_OFFSET+0x001F)

/* Read access macros for general use */
#define MMC2114_RD_TIM2_TIMIOS(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMIOS,8)
#define MMC2114_RD_TIM2_TIMCFORC(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMCFORC,8)
#define MMC2114_RD_TIM2_TIMOC3M(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMOC3M,8)
#define MMC2114_RD_TIM2_TIMOC3D(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMOC3D,8)
#define MMC2114_RD_TIM2_TIMCNTH(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMCNTH,8)
#define MMC2114_RD_TIM2_TIMCNTL(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMCNTL,8)
#define MMC2114_RD_TIM2_TIMSCR1(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMSCR1,8)
#define MMC2114_RD_TIM2_TIMTOV(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMTOV,8)
#define MMC2114_RD_TIM2_TIMCTL1(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMCTL1,8)
#define MMC2114_RD_TIM2_TIMCTL2(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMCTL2,8)
#define MMC2114_RD_TIM2_TIMIE(IMMP)	      MMC2114_iord(IMMP,MMC2114_TIM2_TIMIE,8)
#define MMC2114_RD_TIM2_TIMSCR2(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMSCR2,8)
#define MMC2114_RD_TIM2_TIMFLG1(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMFLG1,8)
#define MMC2114_RD_TIM2_TIMFLG2(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMFLG2,8)
#define MMC2114_RD_TIM2_TIMC0H(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMC0H,8)
#define MMC2114_RD_TIM2_TIMC0L(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMC0L,8)
#define MMC2114_RD_TIM2_TIMC1H(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMC1H,8)
#define MMC2114_RD_TIM2_TIMC1L(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMC1L,8)
#define MMC2114_RD_TIM2_TIMC2H(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMC2H,8)
#define MMC2114_RD_TIM2_TIMC2L(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMC2L,8)
#define MMC2114_RD_TIM2_TIMC3H(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMC3H,8)
#define MMC2114_RD_TIM2_TIMC3L(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMC3L,8)
#define MMC2114_RD_TIM2_TIMPACTL(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMPACTL,8)
#define MMC2114_RD_TIM2_TIMPAFLG(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMPAFLG,8)
#define MMC2114_RD_TIM2_TIMPACNTH(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMPACNTH,8)
#define MMC2114_RD_TIM2_TIMPACNTL(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMPACNTL,8)
#define MMC2114_RD_TIM2_TIMPORT(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMPORT,8)
#define MMC2114_RD_TIM2_TIMDDR(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMDDR,8)
#define MMC2114_RD_TIM2_TIMTST(IMMP)	  MMC2114_iord(IMMP,MMC2114_TIM2_TIMTST,8)

/* Write access macros for general use */
#define MMC2114_WR_TIM2_TIMIOS(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMIOS,8,DATA)
#define MMC2114_WR_TIM2_TIMCFORC(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMCFORC,8,DATA)
#define MMC2114_WR_TIM2_TIMOC3M(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMOC3M,8,DATA)
#define MMC2114_WR_TIM2_TIMOC3D(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMOC3D,8,DATA)
#define MMC2114_WR_TIM2_TIMCNTH(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMCNTH,8,DATA)
#define MMC2114_WR_TIM2_TIMCNTL(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMCNTL,8,DATA)
#define MMC2114_WR_TIM2_TIMSCR1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMSCR1,8,DATA)
#define MMC2114_WR_TIM2_TIMTOV(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMTOV,8,DATA)
#define MMC2114_WR_TIM2_TIMCTL1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMCTL1,8,DATA)
#define MMC2114_WR_TIM2_TIMCTL2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMCTL2,8,DATA)
#define MMC2114_WR_TIM2_TIMIE(IMMP,DATA)      MMC2114_iowr(IMMP,MMC2114_TIM2_TIMIE,8,DATA)
#define MMC2114_WR_TIM2_TIMSCR2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMSCR2,8,DATA)
#define MMC2114_WR_TIM2_TIMFLG1(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMFLG1,8,DATA)
#define MMC2114_WR_TIM2_TIMFLG2(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMFLG2,8,DATA)
#define MMC2114_WR_TIM2_TIMC0H(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMC0H,8,DATA)
#define MMC2114_WR_TIM2_TIMC0L(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMC0L,8,DATA)
#define MMC2114_WR_TIM2_TIMC1H(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMC1H,8,DATA)
#define MMC2114_WR_TIM2_TIMC1L(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMC1L,8,DATA)
#define MMC2114_WR_TIM2_TIMC2H(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMC2H,8,DATA)
#define MMC2114_WR_TIM2_TIMC2L(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMC2L,8,DATA)
#define MMC2114_WR_TIM2_TIMC3H(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMC3H,8,DATA)
#define MMC2114_WR_TIM2_TIMC3L(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMC3L,8,DATA)
#define MMC2114_WR_TIM2_TIMPACTL(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMPACTL,8,DATA)
#define MMC2114_WR_TIM2_TIMPAFLG(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMPAFLG,8,DATA)
#define MMC2114_WR_TIM2_TIMPACNTH(IMMP,DATA)  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMPACNTH,8,DATA)
#define MMC2114_WR_TIM2_TIMPACNTL(IMMP,DATA)  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMPACNTL,8,DATA)
#define MMC2114_WR_TIM2_TIMPORT(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMPORT,8,DATA)
#define MMC2114_WR_TIM2_TIMDDR(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMDDR,8,DATA)
#define MMC2114_WR_TIM2_TIMTST(IMMP,DATA)	  MMC2114_iowr(IMMP,MMC2114_TIM2_TIMTST,8,DATA)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_TIM2_OFFSET];
	uint8	TIMIOS;
	uint8	TIMCFORC;
	uint8	TIMOC3M;
	uint8	TIMOC3D;
	uint8	TIMCNTH;
	uint8	TIMCNTL;
	uint8	TIMSCR1;
    uint8	Reserved1[0x01];
	uint8	TIMTOV;
	uint8	TIMCTL1;
    uint8	Reserved2[0x01];
	uint8	TIMCTL2;
	uint8	TIMIE;
	uint8	TIMSCR2;
	uint8	TIMFLG1;
	uint8	TIMFLG2;
	uint8	TIMC0H;
	uint8	TIMC0L;
	uint8	TIMC1H;
	uint8	TIMC1L;
	uint8	TIMC2H;
	uint8	TIMC2L;
	uint8	TIMC3H;
	uint8	TIMC3L;
	uint8	TIMPACTL;
	uint8	TIMPAFLG;
	uint8	TIMPACNTH;
	uint8	TIMPACNTL;
    uint8	Reserved3[0x01];
	uint8	TIMPORT;
	uint8	TIMDDR;
	uint8	TIMTST;
} MMC2114_TIM2;


/***********************************************************************
 *
 * Internal FLASH Memory Module, SGFM
 *
 ***********************************************************************/

/* Offsets of the registers from the MBAR */
#define MMC2114_SGFM_OFFSET         (0x00100000)

/* Register offsets */
#define MMC2114_SGFM_SGFMCR		    (MMC2114_SGFM_OFFSET+0x0000)
#define MMC2114_SGFM_SGFMCLKD	    (MMC2114_SGFM_OFFSET+0x0002)
#define MMC2114_SGFM_SGFMTST	    (MMC2114_SGFM_OFFSET+0x0004)
#define MMC2114_SGFM_SGFMSEC		(MMC2114_SGFM_OFFSET+0x0008)
#define MMC2114_SGFM_SGFMMNTR       (MMC2114_SGFM_OFFSET+0x000C)
#define MMC2114_SGFM_SGFMPROT       (MMC2114_SGFM_OFFSET+0x0010)
#define MMC2114_SGFM_SGFMSACC       (MMC2114_SGFM_OFFSET+0x0014)
#define MMC2114_SGFM_SGFMDACC       (MMC2114_SGFM_OFFSET+0x0016)
#define MMC2114_SGFM_SGFMTSTAT      (MMC2114_SGFM_OFFSET+0x0018)
#define MMC2114_SGFM_SGFMUSTAT      (MMC2114_SGFM_OFFSET+0x001C)
#define MMC2114_SGFM_SGFMCMD        (MMC2114_SGFM_OFFSET+0x0020)
#define MMC2114_SGFM_SGFMCTL        (MMC2114_SGFM_OFFSET+0x0024)
#define MMC2114_SGFM_SGFMADR        (MMC2114_SGFM_OFFSET+0x0026)
#define MMC2114_SGFM_SGFMDATA       (MMC2114_SGFM_OFFSET+0x0028)

/* Read access macros for general use */
#define MMC2114_RD_SGFM_SGFMCR(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMCR,16)
#define MMC2114_RD_SGFM_SGFMCLKD(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMCLKD,8)
#define MMC2114_RD_SGFM_SGFMTST(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMTST,8)
#define MMC2114_RD_SGFM_SGFMSEC(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMSEC,32)
#define MMC2114_RD_SGFM_SGFMMNTR(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMMNTR,32)
#define MMC2114_RD_SGFM_SGFMPROT(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMPROT,16)
#define MMC2114_RD_SGFM_SGFMSACC(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMSACC,16)
#define MMC2114_RD_SGFM_SGFMDACC(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMDACC,16)
#define MMC2114_RD_SGFM_SGFMTSTAT(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMTSTAT,8)
#define MMC2114_RD_SGFM_SGFMUSTAT(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMUSTAT,8)
#define MMC2114_RD_SGFM_SGFMCMD(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMCMD,8)
#define MMC2114_RD_SGFM_SGFMCTL(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMCTL,16)
#define MMC2114_RD_SGFM_SGFMADR(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMADR,16)
#define MMC2114_RD_SGFM_SGFMDATA(IMMP)	  MMC2114_iord(IMMP,MMC2114_SGFM_SGFMDATA,32)

/* Write access macros for general use */
#define MMC2114_WR_SGFM_SGFMCR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMCR,16,DATA)
#define MMC2114_WR_SGFM_SGFMCLKD(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMCLKD,8,DATA)
#define MMC2114_WR_SGFM_SGFMTST(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMTST,8,DATA)
#define MMC2114_WR_SGFM_SGFMSEC(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMSEC,32,DATA)
#define MMC2114_WR_SGFM_SGFMMNTR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMMNTR,32,DATA)
#define MMC2114_WR_SGFM_SGFMPROT(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMPROT,16,DATA)
#define MMC2114_WR_SGFM_SGFMSACC(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMSACC,16,DATA)
#define MMC2114_WR_SGFM_SGFMDACC(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMDACC,16,DATA)
#define MMC2114_WR_SGFM_SGFMTSTAT(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMTSTAT,8,DATA)
#define MMC2114_WR_SGFM_SGFMUSTAT(IMMP,DATA)	MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMUSTAT,8,DATA)
#define MMC2114_WR_SGFM_SGFMCMD(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMCMD,8,DATA)
#define MMC2114_WR_SGFM_SGFMCTL(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMCTL,16,DATA)
#define MMC2114_WR_SGFM_SGFMADR(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMADR,16,DATA)
#define MMC2114_WR_SGFM_SGFMDATA(IMMP,DATA)	    MMC2114_iowr(IMMP,MMC2114_SGFM_SGFMDATA,32,DATA)

/* Bit field defines */
#define MMC2114_SGFM_SGFMCR_FRZ           (0x4000)
#define MMC2114_SGFM_SGFMCR_EME           (0x1000)
#define MMC2114_SGFM_SGFMCR_LOCK          (0x0400)
#define MMC2114_SGFM_SGFMCR_CBEIE         (0x0080)
#define MMC2114_SGFM_SGFMCR_CCIE          (0x0040)
#define MMC2114_SGFM_SGFMCR_KEYACC        (0x0020)
#define MMC2114_SGFM_SGFMCR_BLK(a)        ((a)&0x03)

#define MMC2114_SGFM_SGFMCLKD_DIVLD       (0x80)
#define MMC2114_SGFM_SGFMCLKD_PRDIV       (0x40)
#define MMC2114_SGFM_SGFMCLKD_DIV(a)      ((a)&0x3F)

#define MMC2114_SGFM_SGFMSEC_DIVLD        (0x80000000)
#define MMC2114_SGFM_SGFMSEC_PRDIV        (0x40000000)
#define MMC2114_SGFM_SGFMSEC_SEC(a)       ((a)&0xFFFF)
#define MMC2114_SGFM_SGFMSEC_SECURED      (0x000B)
#define MMC2114_SGFM_SGFMSEC_UNSECURED    (0x0000)

#define MMC2114_SGFM_SGFMPROT_PROT(a)     ((0x01)<<(a))

#define MMC2114_SGFM_SGFMSACC_SUPV(a)     ((0x01)<<(a))

#define MMC2114_SGFM_SGFMDACC_DATA(a)     ((0x01)<<(a))

#define MMC2114_SGFM_SGFMUSTAT_CBEIF      (0x80)
#define MMC2114_SGFM_SGFMUSTAT_CCIF       (0x40)
#define MMC2114_SGFM_SGFMUSTAT_PVIOL      (0x20)
#define MMC2114_SGFM_SGFMUSTAT_ACCERR     (0x10)
#define MMC2114_SGFM_SGFMUSTAT_BLANK      (0x04)
#define MMC2114_SGFM_SGFMUSTAT_ABORT      (0x00)

#define MMC2114_SGFM_SGFMCMD_BCHECK       (0x05)
#define MMC2114_SGFM_SGFMCMD_PROGRAM      (0x20)
#define MMC2114_SGFM_SGFMCMD_PERASE       (0x40)
#define MMC2114_SGFM_SGFMCMD_MERASE       (0x41)

/* Read/Write access structure */
typedef volatile struct
{
    uint8	Reserved0[MMC2114_SGFM_OFFSET];
    uint16	SGFMCR;
    uint8	SGFMCLKD;
    uint8	Reserved1[0x01];
    uint8	SGFMTST;
    uint8	Reserved2[0x03];
    uint32	SGFMSEC;
    uint32	SGFMMNTR;
    uint16	SGFMPROT;
    uint8	Reserved3[0x02];
    uint16	SGFMSACC;
    uint16	SGFMDACC;
    uint8	SGFMTSTAT;
    uint8	Reserved4[0x03];
    uint8	SGFMUSTAT;
    uint8	Reserved5[0x03];
    uint8	SGFMCMD;
    uint8	Reserved6[0x03];
    uint16	SGFMCTL;
    uint16	SGFMADR;
    uint32	SGFMDATA;
} MMC2114_SGFM;


/***********************************************************************
 *
 * Access Structure for all Modules
 *
 ***********************************************************************/
typedef volatile union
{
    MMC2114_PORTS   Ports;
    MMC2114_CCM     Ccm;
    MMC2114_CS      Cs;
    MMC2114_CLOCK   Clock;
    MMC2114_RESET   Reset;
    MMC2114_INTC    Intc;
    MMC2114_EPORT   Eport;
    MMC2114_WDT     Wdt;
    MMC2114_PIT1    Pit1;
    MMC2114_PIT2    Pit2;
    MMC2114_QADC    Qadc;
    MMC2114_SPI     Spi;
    MMC2114_SCI1    Sci1;
    MMC2114_SCI2    Sci2;
    MMC2114_TIM1    Tim1;
    MMC2114_TIM2    Tim2;
    MMC2114_SGFM    Sgfm;
} MMC2114_IMM;

/***********************************************************************/

#endif	/* _CPU_MMC2114_H */
#endif
